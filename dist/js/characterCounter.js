"use strict";var _createClass=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),_get=function e(t,n,r){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,n);if(void 0===i){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,n,r)}if("value"in i)return i.value;var a=i.get;return void 0!==a?a.call(r):void 0};function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}!function(i){var t={},e=function(e){function r(e,t){_classCallCheck(this,r);var n=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,r,e,t));return(n.el.M_CharacterCounter=n).options=i.extend({},r.defaults,t),n.isInvalid=!1,n.isValidLength=!1,n._setupCounter(),n._setupEventHandlers(),n}return _inherits(r,Component),_createClass(r,[{key:"destroy",value:function(){this._removeEventHandlers(),this.el.CharacterCounter=void 0,this._removeCounter()}},{key:"_setupEventHandlers",value:function(){this._handleUpdateCounterBound=this.updateCounter.bind(this),this.el.addEventListener("focus",this._handleUpdateCounterBound,!0),this.el.addEventListener("input",this._handleUpdateCounterBound,!0)}},{key:"_removeEventHandlers",value:function(){this.el.removeEventListener("focus",this._handleUpdateCounterBound,!0),this.el.removeEventListener("input",this._handleUpdateCounterBound,!0)}},{key:"_setupCounter",value:function(){this.counterEl=document.createElement("span"),i(this.counterEl).addClass("character-counter").css({float:"right","font-size":"12px",height:1}),this.$el.parent().append(this.counterEl)}},{key:"_removeCounter",value:function(){i(this.counterEl).remove()}},{key:"updateCounter",value:function(){var e=+this.$el.attr("data-length"),t=this.el.value.length;this.isValidLength=t<=e;var n=t;e&&(n+="/"+e,this._validateInput()),i(this.counterEl).html(n)}},{key:"_validateInput",value:function(){this.isValidLength&&this.isInvalid?(this.isInvalid=!1,this.$el.removeClass("invalid")):this.isValidLength||this.isInvalid||(this.isInvalid=!0,this.$el.removeClass("valid"),this.$el.addClass("invalid"))}}],[{key:"init",value:function(e,t){return _get(r.__proto__||Object.getPrototypeOf(r),"init",this).call(this,this,e,t)}},{key:"getInstance",value:function(e){return(e.jquery?e[0]:e).M_CharacterCounter}},{key:"defaults",get:function(){return t}}]),r}();M.CharacterCounter=e,M.jQueryLoaded&&M.initializeJqueryWrapper(e,"characterCounter","M_CharacterCounter")}(cash);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXJhY3RlckNvdW50ZXIuanMiXSwibmFtZXMiOlsiJCIsIl9kZWZhdWx0cyIsIkNoYXJhY3RlckNvdW50ZXIiLCJfQ29tcG9uZW50IiwiZWwiLCJvcHRpb25zIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl90aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsImNhbGwiLCJNX0NoYXJhY3RlckNvdW50ZXIiLCJleHRlbmQiLCJkZWZhdWx0cyIsImlzSW52YWxpZCIsImlzVmFsaWRMZW5ndGgiLCJfc2V0dXBDb3VudGVyIiwiX3NldHVwRXZlbnRIYW5kbGVycyIsIl9pbmhlcml0cyIsIkNvbXBvbmVudCIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiX3JlbW92ZUV2ZW50SGFuZGxlcnMiLCJ1bmRlZmluZWQiLCJfcmVtb3ZlQ291bnRlciIsIl9oYW5kbGVVcGRhdGVDb3VudGVyQm91bmQiLCJ1cGRhdGVDb3VudGVyIiwiYmluZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb3VudGVyRWwiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhZGRDbGFzcyIsImNzcyIsImZsb2F0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImZvbnQtc2l6ZSIsImhlaWdodCIsIiRlbCIsInBhcmVudCIsImFwcGVuZCIsInJlbW92ZSIsIm1heExlbmd0aCIsImF0dHIiLCJhY3R1YWxMZW5ndGgiLCJsZW5ndGgiLCJjb3VudGVyU3RyaW5nIiwiX3ZhbGlkYXRlSW5wdXQiLCJodG1sIiwicmVtb3ZlQ2xhc3MiLCJlbHMiLCJfZ2V0IiwianF1ZXJ5IiwiZ2V0IiwiTSIsImpRdWVyeUxvYWRlZCIsImluaXRpYWxpemVKcXVlcnlXcmFwcGVyIiwiY2FzaCJdLCJtYXBwaW5ncyI6IjRuQ0FBQyxTQUFVQSxHQUdULElBQUlDLEVBQVksR0FPVkMsRUFWTSxTQUFBQyxHQU1aLFNBQUFELEVBQUFFLEVBQUFDLEdBQUFDLGdCQUFBQyxLQUFBTCxHQUFBLElBQUFNLEVBQUFDLDJCQUFBRixNQUFBTCxFQUFBUSxXQUFBQyxPQUFBQyxlQUFBVixJQUFBVyxLQUFBTixLQVlVTCxFQUFrQkUsRUFBSUMsSUFaaEMsT0FjSUcsRUFBS0osR0FBR1UsbUJBQVJOLEdBVEZILFFBQUFMLEVBQUFlLE9BQUEsR0FBQWIsRUFBQWMsU0FBQVgsR0FnQkVHLEVBQUtTLFdBQVksRUFDakJULEVBQUtVLGVBQWdCLEVBQ3JCVixFQUFLVyxnQkFDTFgsRUFBS1ksc0JBeEJUWixFQU5ZLE9BQUFhLFVBQUFuQixFQVVtQm9CLFdBVm5CQyxhQUFBckIsRUFBQSxDQUFBLENBQUFzQixJQUFBLFVBQUFDLE1BQUEsV0FxRFJsQixLQUFLbUIsdUJBSlBuQixLQUFBSCxHQUFBRixzQkFBQXlCLEVBTUVwQixLQUFLcUIsbUJBdkRHLENBQUFKLElBQUEsc0JBQUFDLE1BQUEsV0E4RFJsQixLQUFLc0IsMEJBQTRCdEIsS0FBS3VCLGNBQWNDLEtBQUt4QixNQUV6REEsS0FBS0gsR0FBRzRCLGlCQUFpQixRQUFTekIsS0FBS3NCLDJCQUEyQixHQUNsRXRCLEtBQUtILEdBQUc0QixpQkFBaUIsUUFBU3pCLEtBQUtzQiwyQkFBMkIsS0FqRTFELENBQUFMLElBQUEsdUJBQUFDLE1BQUEsV0FnRVJsQixLQUFBSCxHQUFLQSxvQkFBb0IsUUFBU0csS0FBS3NCLDJCQUEyQixHQUNsRXRCLEtBQUFILEdBQUtBLG9CQUFvQixRQUFTRyxLQUFLc0IsMkJBQTJCLEtBakUxRCxDQUFBTCxJQUFBLGdCQUFBQyxNQUFBLFdBQUFsQixLQUFBMEIsVUFBQUMsU0FBQUMsY0FBQSxRQUFBbkMsRUFBQU8sS0FBQTBCLFdBQUFHLFNBQUEscUJBd0VSQyxJQUFLakMsQ0FDTGtDLE1BQVFDLFFBQ1RDLFlBQUEsT0FZS0MsT0FBUSxJQUdabEMsS0FBS21DLElBQUlDLFNBQVNDLE9BQU9yQyxLQUFLMEIsYUF6RnRCLENBQUFULElBQUEsaUJBQUFDLE1BQUEsV0FvRkphLEVBQUFBLEtBQUFBLFdBREdPLFdBbkZDLENBQUFyQixJQUFBLGdCQUFBQyxNQUFBLFdBdUdSLElBQUlxQixHQUFhdkMsS0FBS21DLElBQUlLLEtBQUssZUFYakNDLEVBQUF6QyxLQUFBSCxHQUFBcUIsTUFBQXdCLE9BYUUxQyxLQUFLVyxjQUFnQjhCLEdBQWdCRixFQUNyQyxJQUFJSSxFQUFnQkYsRUExR1pGLElBQUFJLEdBQUEsSUFBQUosRUFBQXZDLEtBQUE0QyxrQkFpSFJuRCxFQUFFTyxLQUFLMEIsV0FBV21CLEtBQUtGLEtBakhmLENBQUExQixJQUFBLGlCQUFBQyxNQUFBLFdBQUFsQixLQUFBVyxlQUFBWCxLQUFBVSxXQXVHUlYsS0FBSXVDLFdBQWEsRUFBakJ2QyxLQUNFeUMsSUFBQUEsWUFBZSxZQUNaOUIsS0FBQUEsZUFBZ0I4QixLQUFnQkYsWUFDckN2QyxLQUFJMkMsV0FBQUEsRUFtQkYzQyxLQUFLbUMsSUFBSVcsWUFBWSxTQWpCdkI5QyxLQUFJdUMsSUFBQUEsU0FBVyxlQTVHUCxDQUFBLENBQUF0QixJQUFBLE9BQUFDLE1BQUEsU0FxQ0U2QixFQUFLakQsR0FmZixPQUFBa0QsS0FBQXJELEVBQUFRLFdBQUFDLE9BQUFDLGVBQUFWLEdBQUEsT0FBQUssTUFBQU0sS0FBQU4sS0FBQUEsS0FBQStDLEVBQUFqRCxLQXRCUSxDQUFBbUIsSUFBQSxjQUFBQyxNQUFBLFNBNEJIUCxHQUVMLE9BREtDLEVBQUxxQyxPQUFBcEQsRUFBQSxHQUFBQSxHQUNLZ0IscUJBOUJHLENBQUFJLElBQUEsV0FBQWlDLElBQUEsV0FpQmUsT0FBQXhELE1BakJmQyxFQUFBLEdBaUhSRixFQUFBQSxpQkFBT2lDLEVBb0JQeUIsRUFBRUMsY0FqQkpELEVBQUFFLHdCQUFBMUQsRUFBQSxtQkFBQSxzQkFwSEgsQ0F5SUMyRCIsImZpbGUiOiJjaGFyYWN0ZXJDb3VudGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBsZXQgX2RlZmF1bHRzID0ge307XG5cblxuICAvKipcbiAgICogQGNsYXNzXG4gICAqXG4gICAqL1xuICBjbGFzcyBDaGFyYWN0ZXJDb3VudGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgQ2hhcmFjdGVyQ291bnRlciBpbnN0YW5jZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGVsLCBvcHRpb25zKSB7XG4gICAgICBzdXBlcihDaGFyYWN0ZXJDb3VudGVyLCBlbCwgb3B0aW9ucyk7XG5cbiAgICAgIHRoaXMuZWwuTV9DaGFyYWN0ZXJDb3VudGVyID0gdGhpcztcblxuICAgICAgLyoqXG4gICAgICAgKiBPcHRpb25zIGZvciB0aGUgY2hhcmFjdGVyIGNvdW50ZXJcbiAgICAgICAqL1xuICAgICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIENoYXJhY3RlckNvdW50ZXIuZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgICB0aGlzLmlzSW52YWxpZCA9IGZhbHNlO1xuICAgICAgdGhpcy5pc1ZhbGlkTGVuZ3RoID0gZmFsc2U7XG4gICAgICB0aGlzLl9zZXR1cENvdW50ZXIoKTtcbiAgICAgIHRoaXMuX3NldHVwRXZlbnRIYW5kbGVycygpO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgZGVmYXVsdHMoKSB7XG4gICAgICByZXR1cm4gX2RlZmF1bHRzO1xuICAgIH1cblxuICAgIHN0YXRpYyBpbml0KGVscywgb3B0aW9ucykge1xuICAgICAgcmV0dXJuIHN1cGVyLmluaXQodGhpcywgZWxzLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgSW5zdGFuY2VcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoZWwpIHtcbiAgICAgIGxldCBkb21FbGVtID0gISFlbC5qcXVlcnkgPyBlbFswXSA6IGVsO1xuICAgICAgcmV0dXJuIGRvbUVsZW0uTV9DaGFyYWN0ZXJDb3VudGVyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlYXJkb3duIGNvbXBvbmVudFxuICAgICAqL1xuICAgIGRlc3Ryb3koKSB7XG4gICAgICB0aGlzLl9yZW1vdmVFdmVudEhhbmRsZXJzKCk7XG4gICAgICB0aGlzLmVsLkNoYXJhY3RlckNvdW50ZXIgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLl9yZW1vdmVDb3VudGVyKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0dXAgRXZlbnQgSGFuZGxlcnNcbiAgICAgKi9cbiAgICBfc2V0dXBFdmVudEhhbmRsZXJzKCkge1xuICAgICAgdGhpcy5faGFuZGxlVXBkYXRlQ291bnRlckJvdW5kID0gdGhpcy51cGRhdGVDb3VudGVyLmJpbmQodGhpcyk7XG5cbiAgICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCB0aGlzLl9oYW5kbGVVcGRhdGVDb3VudGVyQm91bmQsIHRydWUpO1xuICAgICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIHRoaXMuX2hhbmRsZVVwZGF0ZUNvdW50ZXJCb3VuZCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIEV2ZW50IEhhbmRsZXJzXG4gICAgICovXG4gICAgX3JlbW92ZUV2ZW50SGFuZGxlcnMoKSB7XG4gICAgICB0aGlzLmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgdGhpcy5faGFuZGxlVXBkYXRlQ291bnRlckJvdW5kLCB0cnVlKTtcbiAgICAgIHRoaXMuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB0aGlzLl9oYW5kbGVVcGRhdGVDb3VudGVyQm91bmQsIHRydWUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHVwIGNvdW50ZXIgZWxlbWVudFxuICAgICAqL1xuICAgIF9zZXR1cENvdW50ZXIoKSB7XG4gICAgICB0aGlzLmNvdW50ZXJFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICQodGhpcy5jb3VudGVyRWwpXG4gICAgICAgIC5hZGRDbGFzcygnY2hhcmFjdGVyLWNvdW50ZXInKVxuICAgICAgICAuY3NzKHtcbiAgICAgICAgICBmbG9hdDogJ3JpZ2h0JyxcbiAgICAgICAgICAnZm9udC1zaXplJzogJzEycHgnLFxuICAgICAgICAgIGhlaWdodDogMVxuICAgICAgICB9KTtcblxuICAgICAgdGhpcy4kZWwucGFyZW50KCkuYXBwZW5kKHRoaXMuY291bnRlckVsKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgY291bnRlciBlbGVtZW50XG4gICAgICovXG4gICAgX3JlbW92ZUNvdW50ZXIoKSB7XG4gICAgICAkKHRoaXMuY291bnRlckVsKS5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgY291bnRlclxuICAgICAqL1xuICAgIHVwZGF0ZUNvdW50ZXIoKSB7XG4gICAgICBsZXQgbWF4TGVuZ3RoID0gK3RoaXMuJGVsLmF0dHIoJ2RhdGEtbGVuZ3RoJyksXG4gICAgICAgIGFjdHVhbExlbmd0aCA9IHRoaXMuZWwudmFsdWUubGVuZ3RoO1xuICAgICAgdGhpcy5pc1ZhbGlkTGVuZ3RoID0gYWN0dWFsTGVuZ3RoIDw9IG1heExlbmd0aDtcbiAgICAgIGxldCBjb3VudGVyU3RyaW5nID0gYWN0dWFsTGVuZ3RoO1xuXG4gICAgICBpZiAobWF4TGVuZ3RoKSB7XG4gICAgICAgIGNvdW50ZXJTdHJpbmcgKz0gJy8nICsgbWF4TGVuZ3RoO1xuICAgICAgICB0aGlzLl92YWxpZGF0ZUlucHV0KCk7XG4gICAgICB9XG5cbiAgICAgICQodGhpcy5jb3VudGVyRWwpLmh0bWwoY291bnRlclN0cmluZyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHZhbGlkYXRpb24gY2xhc3Nlc1xuICAgICAqL1xuICAgIF92YWxpZGF0ZUlucHV0KCkge1xuICAgICAgaWYgKHRoaXMuaXNWYWxpZExlbmd0aCAmJiB0aGlzLmlzSW52YWxpZCkge1xuICAgICAgICB0aGlzLmlzSW52YWxpZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLiRlbC5yZW1vdmVDbGFzcygnaW52YWxpZCcpO1xuICAgICAgfSBlbHNlIGlmICghdGhpcy5pc1ZhbGlkTGVuZ3RoICYmICF0aGlzLmlzSW52YWxpZCkge1xuICAgICAgICB0aGlzLmlzSW52YWxpZCA9IHRydWU7XG4gICAgICAgIHRoaXMuJGVsLnJlbW92ZUNsYXNzKCd2YWxpZCcpO1xuICAgICAgICB0aGlzLiRlbC5hZGRDbGFzcygnaW52YWxpZCcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIE0uQ2hhcmFjdGVyQ291bnRlciA9IENoYXJhY3RlckNvdW50ZXI7XG5cbiAgaWYgKE0ualF1ZXJ5TG9hZGVkKSB7XG4gICAgTS5pbml0aWFsaXplSnF1ZXJ5V3JhcHBlcihDaGFyYWN0ZXJDb3VudGVyLCAnY2hhcmFjdGVyQ291bnRlcicsICdNX0NoYXJhY3RlckNvdW50ZXInKTtcbiAgfVxuXG59KGNhc2gpKTtcbiJdfQ==
