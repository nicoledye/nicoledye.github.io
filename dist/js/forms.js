"use strict";!function(u){M.updateTextFields=function(){u("input[type=text], input[type=password], input[type=email], input[type=url], input[type=tel], input[type=number], input[type=search], input[type=date], input[type=time], textarea").each(function(t,e){var i=u(this);0<t.value.length||u(t).is(":focus")||t.autofocus||null!==i.attr("placeholder")?i.siblings("label").addClass("active"):t.validity?i.siblings("label").toggleClass("active",!0===t.validity.badInput):i.siblings("label").removeClass("active")})},M.validate_field=function(t){var e=null!==t.attr("data-length"),i=parseInt(t.attr("data-length")),a=t[0].value.length;0!==a||!1!==t[0].validity.badInput||t.is(":required")?t.hasClass("validate")&&(t.is(":valid")&&e&&a<=i||t.is(":valid")&&!e?(t.removeClass("invalid"),t.addClass("valid")):(t.removeClass("valid"),t.addClass("invalid"))):t.hasClass("validate")&&(t.removeClass("valid"),t.removeClass("invalid"))},M.textareaAutoResize=function(t){if(t instanceof Element&&(t=u(t)),t.length){var e=u(".hiddendiv").first();e.length||(e=u('<div class="hiddendiv common"></div>'),u("body").append(e));var i=t.css("font-family"),a=t.css("font-size"),n=t.css("line-height"),s=t.css("padding-top"),l=t.css("padding-right"),d=t.css("padding-bottom"),o=t.css("padding-left");a&&e.css("font-size",a),i&&e.css("font-family",i),n&&e.css("line-height",n),s&&e.css("padding-top",s),l&&e.css("padding-right",l),d&&e.css("padding-bottom",d),o&&e.css("padding-left",o),t.data("original-height")||t.data("original-height",t.height()),"off"===t.attr("wrap")&&e.css("overflow-wrap","normal").css("white-space","pre"),e.text(t[0].value+"\n");var r=e.html().replace(/\n/g,"<br>");e.html(r),0<t[0].offsetWidth&&0<t[0].offsetHeight?e.css("width",t.width()+"px"):e.css("width",window.innerWidth/2+"px"),t.data("original-height")<=e.innerHeight()?t.css("height",e.innerHeight()+"px"):t[0].value.length<t.data("previous-length")&&t.css("height",t.data("original-height")+"px"),t.data("previous-length",t[0].value.length)}else console.error("No textarea element found")},u(document).ready(function(){var a="input[type=text], input[type=password], input[type=email], input[type=url], input[type=tel], input[type=number], input[type=search], input[type=date], input[type=time], textarea";u(document).on("change",a,function(){0===this.value.length&&null===u(this).attr("placeholder")||u(this).siblings("label").addClass("active"),M.validate_field(u(this))}),u(document).ready(function(){M.updateTextFields()}),u(document).on("reset",function(t){var e=u(t.target);e.is("form")&&(e.find(a).removeClass("valid").removeClass("invalid"),e.find(a).each(function(t){this.value.length&&u(this).siblings("label").removeClass("active")}),setTimeout(function(){e.find("select").each(function(){if(this.M_FormSelect){var t=u(this).find("option[selected]").text();u(this).siblings("input.select-dropdown")[0].value=t}})},0))}),document.addEventListener("focus",function(t){u(t.target).is(a)&&u(t.target).siblings("label, .prefix").addClass("active")},!0),document.addEventListener("blur",function(t){var e=u(t.target);if(e.is(a)){var i=".prefix";0===e[0].value.length&&!0!==e[0].validity.badInput&&null===e.attr("placeholder")&&(i+=", label"),e.siblings(i).removeClass("active"),M.validate_field(e)}},!0);u(document).on("keyup","input[type=radio], input[type=checkbox]",function(t){if(t.which===M.keys.TAB)return u(this).addClass("tabbed"),void u(this).one("blur",function(t){u(this).removeClass("tabbed")})});var t=".materialize-textarea";u(t).each(function(){var t=u(this);t.data("original-height",t.height()),t.data("previous-length",this.value.length),M.textareaAutoResize(t)}),u(document).on("keyup",t,function(){M.textareaAutoResize(u(this))}),u(document).on("keydown",t,function(){M.textareaAutoResize(u(this))}),u(document).on("change",'.file-field input[type="file"]',function(){for(var t=u(this).closest(".file-field").find("input.file-path"),e=u(this)[0].files,i=[],a=0;a<e.length;a++)i.push(e[a].name);t[0].value=i.join(", "),t.trigger("change")})})}(cash);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
