"use strict";var _createClass=function(){function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}(),_get=function e(t,i,n){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,i);if(void 0===o){var s=Object.getPrototypeOf(t);return null===s?void 0:e(s,i,n)}if("value"in o)return o.value;var l=o.get;return void 0!==l?l.call(n):void 0};function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}!function(d){var t={classes:"",dropdownOptions:{}},e=function(e){function n(e,t){_classCallCheck(this,n);var i=_possibleConstructorReturn(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,n,e,t));return i.$el.hasClass("browser-default")?_possibleConstructorReturn(i):((i.el.M_FormSelect=i).options=d.extend({},n.defaults,t),i.isMultiple=i.$el.prop("multiple"),i.el.tabIndex=-1,i._keysSelected={},i._valueDict={},i._setupDropdown(),i._setupEventHandlers(),i)}return _inherits(n,Component),_createClass(n,[{key:"destroy",value:function(){this._removeEventHandlers(),this._removeDropdown(),this.el.M_FormSelect=void 0}},{key:"_setupEventHandlers",value:function(){var t=this;this._handleSelectChangeBound=this._handleSelectChange.bind(this),this._handleOptionClickBound=this._handleOptionClick.bind(this),this._handleInputClickBound=this._handleInputClick.bind(this),d(this.dropdownOptions).find("li:not(.optgroup)").each(function(e){e.addEventListener("click",t._handleOptionClickBound)}),this.el.addEventListener("change",this._handleSelectChangeBound),this.input.addEventListener("click",this._handleInputClickBound)}},{key:"_removeEventHandlers",value:function(){var t=this;d(this.dropdownOptions).find("li:not(.optgroup)").each(function(e){e.removeEventListener("click",t._handleOptionClickBound)}),this.el.removeEventListener("change",this._handleSelectChangeBound),this.input.removeEventListener("click",this._handleInputClickBound)}},{key:"_handleSelectChange",value:function(e){this._setValueToInput()}},{key:"_handleOptionClick",value:function(e){e.preventDefault();var t=d(e.target).closest("li")[0],i=t.id;if(!d(t).hasClass("disabled")&&!d(t).hasClass("optgroup")&&i.length){var n=!0;if(this.isMultiple){var o=d(this.dropdownOptions).find("li.disabled.selected");o.length&&(o.removeClass("selected"),o.find('input[type="checkbox"]').prop("checked",!1),this._toggleEntryFromArray(o[0].id));var s=d(t).find('input[type="checkbox"]');s.prop("checked",!s.prop("checked")),n=this._toggleEntryFromArray(i)}else d(this.dropdownOptions).find("li").removeClass("active"),d(t).toggleClass("active"),this.input.value=t.textContent;this._activateOption(d(this.dropdownOptions),t),d(this._valueDict[i].el).prop("selected",n),this.$el.trigger("change")}e.stopPropagation()}},{key:"_handleInputClick",value:function(){this.dropdown&&this.dropdown.isOpen&&(this._setValueToInput(),this._setSelectedStates())}},{key:"_setupDropdown",value:function(){var n=this;this.wrapper=document.createElement("div"),d(this.wrapper).addClass("select-wrapper "+this.options.classes),this.$el.before(d(this.wrapper)),this.wrapper.appendChild(this.el),this.el.disabled&&this.wrapper.classList.add("disabled"),this.$selectOptions=this.$el.children("option, optgroup"),this.dropdownOptions=document.createElement("ul"),this.dropdownOptions.id="select-options-"+M.guid(),d(this.dropdownOptions).addClass("dropdown-content select-dropdown "+(this.isMultiple?"multiple-select-dropdown":"")),this.$selectOptions.length&&this.$selectOptions.each(function(e){if(d(e).is("option")){var t=void 0;t=n.isMultiple?n._appendOptionWithIcon(n.$el,e,"multiple"):n._appendOptionWithIcon(n.$el,e),n._addOptionToValueDict(e,t)}else if(d(e).is("optgroup")){var i=d(e).children("option");d(n.dropdownOptions).append(d('<li class="optgroup"><span>'+e.getAttribute("label")+"</span></li>")[0]),i.each(function(e){var t=n._appendOptionWithIcon(n.$el,e,"optgroup-option");n._addOptionToValueDict(e,t)})}}),this.$el.after(this.dropdownOptions),this.input=document.createElement("input"),d(this.input).addClass("select-dropdown dropdown-trigger"),this.input.setAttribute("type","text"),this.input.setAttribute("readonly","true"),this.input.setAttribute("data-target",this.dropdownOptions.id),this.el.disabled&&d(this.input).prop("disabled","true"),this.$el.before(this.input),this._setValueToInput();var e=d('<svg class="caret" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');if(this.$el.before(e[0]),!this.el.disabled){var t=d.extend({},this.options.dropdownOptions);t.onOpenEnd=function(e){var t=d(n.dropdownOptions).find(".selected").first();if(n.dropdown.isScrollable&&t.length){var i=t[0].getBoundingClientRect().top-n.dropdownOptions.getBoundingClientRect().top;i-=n.dropdownOptions.clientHeight/2,n.dropdownOptions.scrollTop=i}},this.isMultiple&&(t.closeOnClick=!1),this.dropdown=M.Dropdown.init(this.input,t)}this._setSelectedStates()}},{key:"_addOptionToValueDict",value:function(e,t){var i=Object.keys(this._valueDict).length,n=this.dropdownOptions.id+i,o={};t.id=n,o.el=e,o.optionEl=t,this._valueDict[n]=o}},{key:"_removeDropdown",value:function(){d(this.wrapper).find(".caret").remove(),d(this.input).remove(),d(this.dropdownOptions).remove(),d(this.wrapper).before(this.$el),d(this.wrapper).remove()}},{key:"_appendOptionWithIcon",value:function(e,t,i){var n=t.disabled?"disabled ":"",o="optgroup-option"===i?"optgroup-option ":"",s=this.isMultiple?'<label><input type="checkbox"'+n+'"/><span>'+t.innerHTML+"</span></label>":t.innerHTML,l=d("<li></li>"),r=d("<span></span>");r.html(s),l.addClass(n+" "+o),l.append(r);var p=t.getAttribute("data-icon");t.getAttribute("class");if(p){var a=d('<img alt="" src="'+p+'">');l.prepend(a)}return d(this.dropdownOptions).append(l[0]),l[0]}},{key:"_toggleEntryFromArray",value:function(e){var t=!this._keysSelected.hasOwnProperty(e);return t?this._keysSelected[e]=!0:delete this._keysSelected[e],d(this._valueDict[e].optionEl).toggleClass("active"),d(this._valueDict[e].el).prop("selected",t),t}},{key:"_setValueToInput",value:function(){var i="";if(this.$el.find("option").each(function(e){if(d(e).prop("selected")){var t=d(e).text();i+=""===i?t:", "+t}}),""===i){var e=this.$el.find("option:disabled").eq(0);e.length&&(i=e.text())}this.input.value=i}},{key:"_setSelectedStates",value:function(){for(var e in this._keysSelected={},this._valueDict){var t=this._valueDict[e];d(t.el).prop("selected")?(d(t.optionEl).find('input[type="checkbox"]').prop("checked",!0),this._activateOption(d(this.dropdownOptions),d(t.optionEl)),this._keysSelected[e]=!0):(d(t.optionEl).find('input[type="checkbox"]').prop("checked",!1),d(t.optionEl).removeClass("selected"))}}},{key:"_activateOption",value:function(e,t){t&&(this.isMultiple||e.find("li.selected").removeClass("selected"),d(t).addClass("selected"))}},{key:"getSelectedValues",value:function(){var e=[];for(var t in this._keysSelected)e.push(this._valueDict[t].el.value);return e}}],[{key:"init",value:function(e,t){return _get(n.__proto__||Object.getPrototypeOf(n),"init",this).call(this,this,e,t)}},{key:"getInstance",value:function(e){return(e.jquery?e[0]:e).M_FormSelect}},{key:"defaults",get:function(){return t}}]),n}();M.FormSelect=e,M.jQueryLoaded&&M.initializeJqueryWrapper(e,"formSelect","M_FormSelect")}(cash);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
