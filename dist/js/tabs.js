"use strict";var _createClass=function(){function a(t,e){for(var i=0;i<e.length;i++){var a=e[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(t,e,i){return e&&a(t.prototype,e),i&&a(t,i),t}}(),_get=function t(e,i,a){null===e&&(e=Function.prototype);var n=Object.getOwnPropertyDescriptor(e,i);if(void 0===n){var s=Object.getPrototypeOf(e);return null===s?void 0:t(s,i,a)}if("value"in n)return n.value;var o=n.get;return void 0!==o?o.call(a):void 0};function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}!function(o,n){var e={duration:300,onShow:null,swipeable:!1,responsiveThreshold:1/0},t=function(t){function a(t,e){_classCallCheck(this,a);var i=_possibleConstructorReturn(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,a,t,e));return(i.el.M_Tabs=i).options=o.extend({},a.defaults,e),i.$tabLinks=i.$el.children("li.tab").children("a"),i.index=0,i._setTabsAndTabWidth(),i._setupActiveTabLink(),i._createIndicator(),i.options.swipeable?i._setupSwipeableTabs():i._setupNormalTabs(),i._setupEventHandlers(),i}return _inherits(a,Component),_createClass(a,[{key:"destroy",value:function(){this._removeEventHandlers(),this._indicator.parentNode.removeChild(this._indicator),this.options.swipeable?this._teardownSwipeableTabs():this._teardownNormalTabs(),this.$el[0].M_Tabs=void 0}},{key:"_setupEventHandlers",value:function(){this._handleWindowResizeBound=this._handleWindowResize.bind(this),window.addEventListener("resize",this._handleWindowResizeBound),this._handleTabClickBound=this._handleTabClick.bind(this),this.el.addEventListener("click",this._handleTabClickBound)}},{key:"_removeEventHandlers",value:function(){window.removeEventListener("resize",this._handleWindowResizeBound),this.el.removeEventListener("click",this._handleTabClickBound)}},{key:"_handleWindowResize",value:function(){this._setTabsAndTabWidth(),0!==this.tabWidth&&0!==this.tabsWidth&&(this._indicator.style.left=this._calcLeftPos(this.$activeTabLink)+"px",this._indicator.style.right=this._calcRightPos(this.$activeTabLink)+"px")}},{key:"_handleTabClick",value:function(t){var e=this,i=o(t.target).closest("li.tab"),a=o(t.target).closest("a");if(a.length&&a.parent().hasClass("tab"))if(i.hasClass("disabled"))t.preventDefault();else if(!a.attr("target")){this._setTabsAndTabWidth(),this.$activeTabLink.removeClass("active");var n=this.$content;this.$activeTabLink=a,this.$content=o(M.escapeHash(a[0].hash)),this.$tabLinks=this.$el.children("li.tab").children("a"),this.$activeTabLink.addClass("active");var s=this.index;this.index=Math.max(this.$tabLinks.index(a),0),this.options.swipeable?this._tabsCarousel&&this._tabsCarousel.set(this.index,function(){"function"==typeof e.options.onShow&&e.options.onShow.call(e,e.$content[0])}):this.$content.length&&(this.$content[0].style.display="block",this.$content.addClass("active"),"function"==typeof this.options.onShow&&this.options.onShow.call(this,this.$content[0]),n.length&&!n.is(this.$content)&&(n[0].style.display="none",n.removeClass("active"))),this._animateIndicator(s),t.preventDefault()}}},{key:"_createIndicator",value:function(){var t=this,e=document.createElement("li");e.classList.add("indicator"),this.el.appendChild(e),this._indicator=e,setTimeout(function(){t._indicator.style.left=t._calcLeftPos(t.$activeTabLink)+"px",t._indicator.style.right=t._calcRightPos(t.$activeTabLink)+"px"},0)}},{key:"_setupActiveTabLink",value:function(){this.$activeTabLink=o(this.$tabLinks.filter('[href="'+location.hash+'"]')),0===this.$activeTabLink.length&&(this.$activeTabLink=this.$el.children("li.tab").children("a.active").first()),0===this.$activeTabLink.length&&(this.$activeTabLink=this.$el.children("li.tab").children("a").first()),this.$tabLinks.removeClass("active"),this.$activeTabLink[0].classList.add("active"),this.index=Math.max(this.$tabLinks.index(this.$activeTabLink),0),this.$activeTabLink.length&&(this.$content=o(M.escapeHash(this.$activeTabLink[0].hash)),this.$content.addClass("active"))}},{key:"_setupSwipeableTabs",value:function(){var i=this;window.innerWidth>this.options.responsiveThreshold&&(this.options.swipeable=!1);var a=o();this.$tabLinks.each(function(t){var e=o(M.escapeHash(t.hash));e.addClass("carousel-item"),a=a.add(e)});var t=o('<div class="tabs-content carousel carousel-slider"></div>');a.first().before(t),t.append(a),a[0].style.display="";var e=this.$activeTabLink.closest(".tab").index();this._tabsCarousel=M.Carousel.init(t[0],{fullWidth:!0,noWrap:!0,onCycleTo:function(t){var e=i.index;i.index=o(t).index(),i.$activeTabLink.removeClass("active"),i.$activeTabLink=i.$tabLinks.eq(i.index),i.$activeTabLink.addClass("active"),i._animateIndicator(e),"function"==typeof i.options.onShow&&i.options.onShow.call(i,i.$content[0])}}),this._tabsCarousel.set(e)}},{key:"_teardownSwipeableTabs",value:function(){var t=this._tabsCarousel.$el;this._tabsCarousel.destroy(),t.after(t.children()),t.remove()}},{key:"_setupNormalTabs",value:function(){this.$tabLinks.not(this.$activeTabLink).each(function(t){if(t.hash){var e=o(M.escapeHash(t.hash));e.length&&(e[0].style.display="none")}})}},{key:"_teardownNormalTabs",value:function(){this.$tabLinks.each(function(t){if(t.hash){var e=o(M.escapeHash(t.hash));e.length&&(e[0].style.display="")}})}},{key:"_setTabsAndTabWidth",value:function(){this.tabsWidth=this.$el.width(),this.tabWidth=Math.max(this.tabsWidth,this.el.scrollWidth)/this.$tabLinks.length}},{key:"_calcRightPos",value:function(t){return Math.ceil(this.tabsWidth-t.position().left-t[0].getBoundingClientRect().width)}},{key:"_calcLeftPos",value:function(t){return Math.floor(t.position().left)}},{key:"updateTabIndicator",value:function(){this._animateIndicator(this.index)}},{key:"_animateIndicator",value:function(t){var e=0,i=0;0<=this.index-t?e=90:i=90;var a={targets:this._indicator,left:{value:this._calcLeftPos(this.$activeTabLink),delay:e},right:{value:this._calcRightPos(this.$activeTabLink),delay:i},duration:this.options.duration,easing:"easeOutQuad"};n.remove(this._indicator),n(a)}},{key:"select",value:function(t){var e=this.$tabLinks.filter('[href="#'+t+'"]');e.length&&e.trigger("click")}}],[{key:"init",value:function(t,e){return _get(a.__proto__||Object.getPrototypeOf(a),"init",this).call(this,this,t,e)}},{key:"getInstance",value:function(t){return(t.jquery?t[0]:t).M_Tabs}},{key:"defaults",get:function(){return e}}]),a}();window.M.Tabs=t,M.jQueryLoaded&&M.initializeJqueryWrapper(t,"tabs","M_Tabs")}(cash,M.anime);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYnMuanMiXSwibmFtZXMiOlsiJCIsImFuaW0iLCJfZGVmYXVsdHMiLCJkdXJhdGlvbiIsIm9uU2hvdyIsInN3aXBlYWJsZSIsInJlc3BvbnNpdmVUaHJlc2hvbGQiLCJJbmZpbml0eSIsIlRhYnMiLCJfQ29tcG9uZW50IiwiZWwiLCJvcHRpb25zIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl90aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsImNhbGwiLCJNX1RhYnMiLCJleHRlbmQiLCJkZWZhdWx0cyIsIiR0YWJMaW5rcyIsIiRlbCIsImNoaWxkcmVuIiwiaW5kZXgiLCJfc2V0VGFic0FuZFRhYldpZHRoIiwiX3NldHVwQWN0aXZlVGFiTGluayIsIl9jcmVhdGVJbmRpY2F0b3IiLCJfc2V0dXBTd2lwZWFibGVUYWJzIiwiX3NldHVwTm9ybWFsVGFicyIsIl9zZXR1cEV2ZW50SGFuZGxlcnMiLCJfaW5oZXJpdHMiLCJDb21wb25lbnQiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9yZW1vdmVFdmVudEhhbmRsZXJzIiwiX2luZGljYXRvciIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsIl90ZWFyZG93bk5vcm1hbFRhYnMiLCJ1bmRlZmluZWQiLCJfaGFuZGxlV2luZG93UmVzaXplQm91bmQiLCJfaGFuZGxlV2luZG93UmVzaXplIiwiYmluZCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlVGFiQ2xpY2tCb3VuZCIsIl9oYW5kbGVUYWJDbGljayIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YWJzV2lkdGgiLCJfY2FsY0xlZnRQb3MiLCJzdHlsZSIsInJpZ2h0IiwiX2NhbGNSaWdodFBvcyIsIiRhY3RpdmVUYWJMaW5rIiwiZSIsIl90aGlzMiIsInRhYiIsInRhYkxpbmsiLCJ0YXJnZXQiLCJjbG9zZXN0IiwicGFyZW50IiwiaGFzQ2xhc3MiLCJwcmV2ZW50RGVmYXVsdCIsImF0dHIiLCJyZW1vdmVDbGFzcyIsIiRvbGRDb250ZW50IiwibGVuZ3RoIiwiJGNvbnRlbnQiLCJNIiwiZXNjYXBlSGFzaCIsImhhc2giLCJhZGRDbGFzcyIsInByZXZJbmRleCIsIl90YWJzQ2Fyb3VzZWwiLCJzZXQiLCJkaXNwbGF5IiwiaXMiLCJfYW5pbWF0ZUluZGljYXRvciIsImluZGljYXRvciIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZENoaWxkIiwic2V0VGltZW91dCIsIl90aGlzMyIsImxlZnQiLCJmaWx0ZXIiLCJsb2NhdGlvbiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImZpcnN0IiwiTWF0aCIsIm1heCIsImlubmVyV2lkdGgiLCIkdGFic0NvbnRlbnQiLCIkY3VyckNvbnRlbnQiLCJsaW5rIiwiJHRhYnNXcmFwcGVyIiwiYmVmb3JlIiwiYWN0aXZlVGFiSW5kZXgiLCJDYXJvdXNlbCIsImluaXQiLCJmdWxsV2lkdGgiLCJub1dyYXAiLCJvbkN5Y2xlVG8iLCJpdGVtIiwiX3RoaXM0IiwiZXEiLCJkZXN0cm95IiwiYWZ0ZXIiLCJlYWNoIiwid2lkdGgiLCJ0YWJXaWR0aCIsInNjcm9sbFdpZHRoIiwicG9zaXRpb24iLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJmbG9vciIsImxlZnREZWxheSIsInJpZ2h0RGVsYXkiLCJhbmltT3B0aW9ucyIsInRhcmdldHMiLCJkZWxheSIsImVhc2luZyIsInJlbW92ZSIsImNlaWwiLCJ0YWJJZCIsInRyaWdnZXIiLCJfZ2V0IiwiZWxzIiwiZ2V0IiwialF1ZXJ5TG9hZGVkIiwiaW5pdGlhbGl6ZUpxdWVyeVdyYXBwZXIiLCJjYXNoIiwiYW5pbWUiXSwibWFwcGluZ3MiOiI0bkNBQUEsU0FBV0EsRUFBR0MsR0FHWixJQUFJQyxFQUFZLENBQ2RDLFNBQVUsSUFDVkMsT0FBUSxLQUNSQyxXQUFXLEVBQ1hDLG9CQUFxQkMsRUFBQUEsR0FPakJDLEVBZFksU0FBQUMsR0FxQmhCLFNBQUFELEVBQVlF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QU0vRCxFQUFFZ0UiLCJmaWxlIjoidGFicy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCwgYW5pbSkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgbGV0IF9kZWZhdWx0cyA9IHtcbiAgICBkdXJhdGlvbjogMzAwLFxuICAgIG9uU2hvdzogbnVsbCxcbiAgICBzd2lwZWFibGU6IGZhbHNlLFxuICAgIHJlc3BvbnNpdmVUaHJlc2hvbGQ6IEluZmluaXR5LCAvLyBicmVha3BvaW50IGZvciBzd2lwZWFibGVcbiAgfTtcblxuICAvKipcbiAgICogQGNsYXNzXG4gICAqXG4gICAqL1xuICBjbGFzcyBUYWJzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgVGFicyBpbnN0YW5jZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGVsLCBvcHRpb25zKSB7XG4gICAgICBzdXBlcihUYWJzLCBlbCwgb3B0aW9ucyk7XG5cbiAgICAgIHRoaXMuZWwuTV9UYWJzID0gdGhpcztcblxuICAgICAgLyoqXG4gICAgICAgKiBPcHRpb25zIGZvciB0aGUgVGFic1xuICAgICAgICogQG1lbWJlciBUYWJzI29wdGlvbnNcbiAgICAgICAqIEBwcm9wIHtOdW1iZXJ9IGR1cmF0aW9uXG4gICAgICAgKiBAcHJvcCB7RnVuY3Rpb259IG9uU2hvd1xuICAgICAgICogQHByb3Age0Jvb2xlYW59IHN3aXBlYWJsZVxuICAgICAgICogQHByb3Age051bWJlcn0gcmVzcG9uc2l2ZVRocmVzaG9sZFxuICAgICAgICovXG4gICAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgVGFicy5kZWZhdWx0cywgb3B0aW9ucyk7XG5cbiAgICAgIC8vIFNldHVwXG4gICAgICB0aGlzLiR0YWJMaW5rcyA9IHRoaXMuJGVsLmNoaWxkcmVuKCdsaS50YWInKS5jaGlsZHJlbignYScpO1xuICAgICAgdGhpcy5pbmRleCA9IDA7XG4gICAgICB0aGlzLl9zZXRUYWJzQW5kVGFiV2lkdGgoKTtcbiAgICAgIHRoaXMuX3NldHVwQWN0aXZlVGFiTGluaygpO1xuICAgICAgdGhpcy5fY3JlYXRlSW5kaWNhdG9yKCk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc3dpcGVhYmxlKSB7XG4gICAgICAgIHRoaXMuX3NldHVwU3dpcGVhYmxlVGFicygpO1xuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zZXR1cE5vcm1hbFRhYnMoKTtcbiAgICAgIH1cblxuXG4gICAgICB0aGlzLl9zZXR1cEV2ZW50SGFuZGxlcnMoKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IGRlZmF1bHRzKCkge1xuICAgICAgcmV0dXJuIF9kZWZhdWx0cztcbiAgICB9XG5cbiAgICBzdGF0aWMgaW5pdChlbHMsIG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiBzdXBlci5pbml0KHRoaXMsIGVscywgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IEluc3RhbmNlXG4gICAgICovXG4gICAgc3RhdGljIGdldEluc3RhbmNlKGVsKSB7XG4gICAgICBsZXQgZG9tRWxlbSA9ICEhZWwuanF1ZXJ5ID8gZWxbMF0gOiBlbDtcbiAgICAgIHJldHVybiBkb21FbGVtLk1fVGFicztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUZWFyZG93biBjb21wb25lbnRcbiAgICAgKi9cbiAgICBkZXN0cm95KCkge1xuICAgICAgdGhpcy5fcmVtb3ZlRXZlbnRIYW5kbGVycygpO1xuICAgICAgdGhpcy5faW5kaWNhdG9yLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5faW5kaWNhdG9yKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zd2lwZWFibGUpIHtcbiAgICAgICAgdGhpcy5fdGVhcmRvd25Td2lwZWFibGVUYWJzKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl90ZWFyZG93bk5vcm1hbFRhYnMoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxbMF0uTV9UYWJzID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHVwIEV2ZW50IEhhbmRsZXJzXG4gICAgICovXG4gICAgX3NldHVwRXZlbnRIYW5kbGVycygpIHtcbiAgICAgIHRoaXMuX2hhbmRsZVdpbmRvd1Jlc2l6ZUJvdW5kID0gdGhpcy5faGFuZGxlV2luZG93UmVzaXplLmJpbmQodGhpcyk7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5faGFuZGxlV2luZG93UmVzaXplQm91bmQpO1xuXG4gICAgICB0aGlzLl9oYW5kbGVUYWJDbGlja0JvdW5kID0gdGhpcy5faGFuZGxlVGFiQ2xpY2suYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9oYW5kbGVUYWJDbGlja0JvdW5kKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgRXZlbnQgSGFuZGxlcnNcbiAgICAgKi9cbiAgICBfcmVtb3ZlRXZlbnRIYW5kbGVycygpIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9oYW5kbGVXaW5kb3dSZXNpemVCb3VuZCk7XG4gICAgICB0aGlzLmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlVGFiQ2xpY2tCb3VuZCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGFuZGxlIHdpbmRvdyBSZXNpemVcbiAgICAgKi9cbiAgICBfaGFuZGxlV2luZG93UmVzaXplKCkge1xuICAgICAgdGhpcy5fc2V0VGFic0FuZFRhYldpZHRoKCk7XG5cbiAgICAgIGlmICh0aGlzLnRhYldpZHRoICE9PSAwICYmIHRoaXMudGFic1dpZHRoICE9PSAwKSB7XG4gICAgICAgIHRoaXMuX2luZGljYXRvci5zdHlsZS5sZWZ0ID0gdGhpcy5fY2FsY0xlZnRQb3ModGhpcy4kYWN0aXZlVGFiTGluaykgKyAncHgnO1xuICAgICAgICB0aGlzLl9pbmRpY2F0b3Iuc3R5bGUucmlnaHQgPSB0aGlzLl9jYWxjUmlnaHRQb3ModGhpcy4kYWN0aXZlVGFiTGluaykgKyAncHgnO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEhhbmRsZSB0YWIgY2xpY2tcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICovXG4gICAgX2hhbmRsZVRhYkNsaWNrKGUpIHtcbiAgICAgIGxldCB0YWIgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KCdsaS50YWInKTtcbiAgICAgIGxldCB0YWJMaW5rID0gJChlLnRhcmdldCkuY2xvc2VzdCgnYScpO1xuXG4gICAgICAvLyBIYW5kbGUgY2xpY2sgb24gdGFiIGxpbmsgb25seVxuICAgICAgaWYgKCF0YWJMaW5rLmxlbmd0aCB8fCAhdGFiTGluay5wYXJlbnQoKS5oYXNDbGFzcygndGFiJykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGFiLmhhc0NsYXNzKCdkaXNhYmxlZCcpKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBBY3QgYXMgcmVndWxhciBsaW5rIGlmIHRhcmdldCBhdHRyaWJ1dGUgaXMgc3BlY2lmaWVkLlxuICAgICAgaWYgKCEhdGFiTGluay5hdHRyKFwidGFyZ2V0XCIpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fc2V0VGFic0FuZFRhYldpZHRoKCk7XG5cbiAgICAgIC8vIE1ha2UgdGhlIG9sZCB0YWIgaW5hY3RpdmUuXG4gICAgICB0aGlzLiRhY3RpdmVUYWJMaW5rLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgIGxldCAkb2xkQ29udGVudCA9IHRoaXMuJGNvbnRlbnQ7XG5cbiAgICAgIC8vIFVwZGF0ZSB0aGUgdmFyaWFibGVzIHdpdGggdGhlIG5ldyBsaW5rIGFuZCBjb250ZW50XG4gICAgICB0aGlzLiRhY3RpdmVUYWJMaW5rID0gdGFiTGluaztcbiAgICAgIHRoaXMuJGNvbnRlbnQgPSAkKE0uZXNjYXBlSGFzaCh0YWJMaW5rWzBdLmhhc2gpKTtcbiAgICAgIHRoaXMuJHRhYkxpbmtzID0gdGhpcy4kZWwuY2hpbGRyZW4oJ2xpLnRhYicpLmNoaWxkcmVuKCdhJyk7XG5cbiAgICAgIC8vIE1ha2UgdGhlIHRhYiBhY3RpdmUuXG4gICAgICB0aGlzLiRhY3RpdmVUYWJMaW5rLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgIGxldCBwcmV2SW5kZXggPSB0aGlzLmluZGV4O1xuICAgICAgdGhpcy5pbmRleCA9IE1hdGgubWF4KHRoaXMuJHRhYkxpbmtzLmluZGV4KHRhYkxpbmspLCAwKTtcblxuICAgICAgLy8gU3dhcCBjb250ZW50XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnN3aXBlYWJsZSkge1xuICAgICAgICBpZiAodGhpcy5fdGFic0Nhcm91c2VsKSB7XG4gICAgICAgICAgdGhpcy5fdGFic0Nhcm91c2VsLnNldCh0aGlzLmluZGV4LCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAodHlwZW9mKHRoaXMub3B0aW9ucy5vblNob3cpID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLm9uU2hvdy5jYWxsKHRoaXMsIHRoaXMuJGNvbnRlbnRbMF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodGhpcy4kY29udGVudC5sZW5ndGgpIHtcbiAgICAgICAgICB0aGlzLiRjb250ZW50WzBdLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICAgIHRoaXMuJGNvbnRlbnQuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgIGlmICh0eXBlb2YodGhpcy5vcHRpb25zLm9uU2hvdykgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5vblNob3cuY2FsbCh0aGlzLCB0aGlzLiRjb250ZW50WzBdKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoJG9sZENvbnRlbnQubGVuZ3RoICYmXG4gICAgICAgICAgICAgICEkb2xkQ29udGVudC5pcyh0aGlzLiRjb250ZW50KSkge1xuICAgICAgICAgICAgJG9sZENvbnRlbnRbMF0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgICRvbGRDb250ZW50LnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVXBkYXRlIGluZGljYXRvclxuICAgICAgdGhpcy5fYW5pbWF0ZUluZGljYXRvcihwcmV2SW5kZXgpO1xuXG4gICAgICAvLyBQcmV2ZW50IHRoZSBhbmNob3IncyBkZWZhdWx0IGNsaWNrIGFjdGlvblxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgZWxlbWVudHMgZm9yIHRhYiBpbmRpY2F0b3IuXG4gICAgICovXG4gICAgX2NyZWF0ZUluZGljYXRvcigpIHtcbiAgICAgIGxldCBpbmRpY2F0b3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgaW5kaWNhdG9yLmNsYXNzTGlzdC5hZGQoJ2luZGljYXRvcicpO1xuXG4gICAgICB0aGlzLmVsLmFwcGVuZENoaWxkKGluZGljYXRvcik7XG4gICAgICB0aGlzLl9pbmRpY2F0b3IgPSBpbmRpY2F0b3I7XG5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLl9pbmRpY2F0b3Iuc3R5bGUubGVmdCA9IHRoaXMuX2NhbGNMZWZ0UG9zKHRoaXMuJGFjdGl2ZVRhYkxpbmspICsgJ3B4JztcbiAgICAgICAgdGhpcy5faW5kaWNhdG9yLnN0eWxlLnJpZ2h0ID0gdGhpcy5fY2FsY1JpZ2h0UG9zKHRoaXMuJGFjdGl2ZVRhYkxpbmspICsgJ3B4JztcbiAgICAgIH0sIDApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHVwIGZpcnN0IGFjdGl2ZSB0YWIgbGluay5cbiAgICAgKi9cbiAgICBfc2V0dXBBY3RpdmVUYWJMaW5rKCkge1xuICAgICAgLy8gSWYgdGhlIGxvY2F0aW9uLmhhc2ggbWF0Y2hlcyBvbmUgb2YgdGhlIGxpbmtzLCB1c2UgdGhhdCBhcyB0aGUgYWN0aXZlIHRhYi5cbiAgICAgIHRoaXMuJGFjdGl2ZVRhYkxpbmsgPSAkKHRoaXMuJHRhYkxpbmtzLmZpbHRlcignW2hyZWY9XCInK2xvY2F0aW9uLmhhc2grJ1wiXScpKTtcblxuICAgICAgLy8gSWYgbm8gbWF0Y2ggaXMgZm91bmQsIHVzZSB0aGUgZmlyc3QgbGluayBvciBhbnkgd2l0aCBjbGFzcyAnYWN0aXZlJyBhcyB0aGUgaW5pdGlhbCBhY3RpdmUgdGFiLlxuICAgICAgaWYgKHRoaXMuJGFjdGl2ZVRhYkxpbmsubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRoaXMuJGFjdGl2ZVRhYkxpbmsgPSB0aGlzLiRlbC5jaGlsZHJlbignbGkudGFiJykuY2hpbGRyZW4oJ2EuYWN0aXZlJykuZmlyc3QoKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLiRhY3RpdmVUYWJMaW5rLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aGlzLiRhY3RpdmVUYWJMaW5rID0gdGhpcy4kZWwuY2hpbGRyZW4oJ2xpLnRhYicpLmNoaWxkcmVuKCdhJykuZmlyc3QoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kdGFiTGlua3MucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgdGhpcy4kYWN0aXZlVGFiTGlua1swXS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcblxuICAgICAgdGhpcy5pbmRleCA9IE1hdGgubWF4KHRoaXMuJHRhYkxpbmtzLmluZGV4KHRoaXMuJGFjdGl2ZVRhYkxpbmspLCAwKTtcblxuICAgICAgaWYgKHRoaXMuJGFjdGl2ZVRhYkxpbmsubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMuJGNvbnRlbnQgPSAkKE0uZXNjYXBlSGFzaCh0aGlzLiRhY3RpdmVUYWJMaW5rWzBdLmhhc2gpKTtcbiAgICAgICAgdGhpcy4kY29udGVudC5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0dXAgc3dpcGVhYmxlIHRhYnNcbiAgICAgKi9cbiAgICBfc2V0dXBTd2lwZWFibGVUYWJzKCkge1xuICAgICAgLy8gQ2hhbmdlIHN3aXBlYWJsZSBhY2NvcmRpbmcgdG8gcmVzcG9uc2l2ZSB0aHJlc2hvbGRcbiAgICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+IHRoaXMub3B0aW9ucy5yZXNwb25zaXZlVGhyZXNob2xkKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy5zd2lwZWFibGUgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgbGV0ICR0YWJzQ29udGVudCA9ICQoKTtcbiAgICAgIHRoaXMuJHRhYkxpbmtzLmVhY2goKGxpbmspID0+IHtcbiAgICAgICAgbGV0ICRjdXJyQ29udGVudCA9ICQoTS5lc2NhcGVIYXNoKGxpbmsuaGFzaCkpO1xuICAgICAgICAkY3VyckNvbnRlbnQuYWRkQ2xhc3MoJ2Nhcm91c2VsLWl0ZW0nKTtcbiAgICAgICAgJHRhYnNDb250ZW50ID0gJHRhYnNDb250ZW50LmFkZCgkY3VyckNvbnRlbnQpO1xuICAgICAgfSk7XG5cbiAgICAgIGxldCAkdGFic1dyYXBwZXIgPSAkKCc8ZGl2IGNsYXNzPVwidGFicy1jb250ZW50IGNhcm91c2VsIGNhcm91c2VsLXNsaWRlclwiPjwvZGl2PicpO1xuICAgICAgJHRhYnNDb250ZW50LmZpcnN0KCkuYmVmb3JlKCR0YWJzV3JhcHBlcik7XG4gICAgICAkdGFic1dyYXBwZXIuYXBwZW5kKCR0YWJzQ29udGVudCk7XG4gICAgICAkdGFic0NvbnRlbnRbMF0uc3R5bGUuZGlzcGxheSA9ICcnO1xuXG4gICAgICAvLyBLZWVwIGFjdGl2ZSB0YWIgaW5kZXggdG8gc2V0IGluaXRpYWwgY2Fyb3VzZWwgc2xpZGVcbiAgICAgIGxldCBhY3RpdmVUYWJJbmRleCA9IHRoaXMuJGFjdGl2ZVRhYkxpbmsuY2xvc2VzdCgnLnRhYicpLmluZGV4KCk7XG5cbiAgICAgIHRoaXMuX3RhYnNDYXJvdXNlbCA9IE0uQ2Fyb3VzZWwuaW5pdCgkdGFic1dyYXBwZXJbMF0sIHtcbiAgICAgICAgZnVsbFdpZHRoOiB0cnVlLFxuICAgICAgICBub1dyYXA6IHRydWUsXG4gICAgICAgIG9uQ3ljbGVUbzogKGl0ZW0pID0+IHtcbiAgICAgICAgICBsZXQgcHJldkluZGV4ID0gdGhpcy5pbmRleDtcbiAgICAgICAgICB0aGlzLmluZGV4ID0gJChpdGVtKS5pbmRleCgpO1xuICAgICAgICAgIHRoaXMuJGFjdGl2ZVRhYkxpbmsucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgIHRoaXMuJGFjdGl2ZVRhYkxpbmsgPSB0aGlzLiR0YWJMaW5rcy5lcSh0aGlzLmluZGV4KTtcbiAgICAgICAgICB0aGlzLiRhY3RpdmVUYWJMaW5rLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICB0aGlzLl9hbmltYXRlSW5kaWNhdG9yKHByZXZJbmRleCk7XG4gICAgICAgICAgaWYgKHR5cGVvZih0aGlzLm9wdGlvbnMub25TaG93KSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMub25TaG93LmNhbGwodGhpcywgdGhpcy4kY29udGVudFswXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgfSk7XG5cbiAgICAgIC8vIFNldCBpbml0aWFsIGNhcm91c2VsIHNsaWRlIHRvIGFjdGl2ZSB0YWJcbiAgICAgIHRoaXMuX3RhYnNDYXJvdXNlbC5zZXQoYWN0aXZlVGFiSW5kZXgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlYXJkb3duIG5vcm1hbCB0YWJzLlxuICAgICAqL1xuICAgIF90ZWFyZG93blN3aXBlYWJsZVRhYnMoKSB7XG4gICAgICBsZXQgJHRhYnNXcmFwcGVyID0gdGhpcy5fdGFic0Nhcm91c2VsLiRlbDtcbiAgICAgIHRoaXMuX3RhYnNDYXJvdXNlbC5kZXN0cm95KCk7XG5cbiAgICAgIC8vIFVud3JhcFxuICAgICAgJHRhYnNXcmFwcGVyLmFmdGVyKCR0YWJzV3JhcHBlci5jaGlsZHJlbigpKTtcbiAgICAgICR0YWJzV3JhcHBlci5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXR1cCBub3JtYWwgdGFicy5cbiAgICAgKi9cbiAgICBfc2V0dXBOb3JtYWxUYWJzKCkge1xuICAgICAgLy8gSGlkZSBUYWJzIENvbnRlbnRcbiAgICAgIHRoaXMuJHRhYkxpbmtzLm5vdCh0aGlzLiRhY3RpdmVUYWJMaW5rKS5lYWNoKChsaW5rKSA9PiB7XG4gICAgICAgIGlmICghIWxpbmsuaGFzaCkge1xuICAgICAgICAgIGxldCAkY3VyckNvbnRlbnQgPSAkKE0uZXNjYXBlSGFzaChsaW5rLmhhc2gpKTtcbiAgICAgICAgICBpZiAoJGN1cnJDb250ZW50Lmxlbmd0aCkge1xuICAgICAgICAgICAgJGN1cnJDb250ZW50WzBdLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUZWFyZG93biBub3JtYWwgdGFicy5cbiAgICAgKi9cbiAgICBfdGVhcmRvd25Ob3JtYWxUYWJzKCkge1xuICAgICAgLy8gc2hvdyBUYWJzIENvbnRlbnRcbiAgICAgIHRoaXMuJHRhYkxpbmtzLmVhY2goKGxpbmspID0+IHtcbiAgICAgICAgaWYgKCEhbGluay5oYXNoKSB7XG4gICAgICAgICAgbGV0ICRjdXJyQ29udGVudCA9ICQoTS5lc2NhcGVIYXNoKGxpbmsuaGFzaCkpO1xuICAgICAgICAgIGlmICgkY3VyckNvbnRlbnQubGVuZ3RoKSB7XG4gICAgICAgICAgICAkY3VyckNvbnRlbnRbMF0uc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogc2V0IHRhYnMgYW5kIHRhYiB3aWR0aFxuICAgICAqL1xuICAgIF9zZXRUYWJzQW5kVGFiV2lkdGgoKSB7XG4gICAgICB0aGlzLnRhYnNXaWR0aCA9IHRoaXMuJGVsLndpZHRoKCk7XG4gICAgICB0aGlzLnRhYldpZHRoID0gTWF0aC5tYXgodGhpcy50YWJzV2lkdGgsIHRoaXMuZWwuc2Nyb2xsV2lkdGgpIC8gdGhpcy4kdGFiTGlua3MubGVuZ3RoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZpbmRzIHJpZ2h0IGF0dHJpYnV0ZSBmb3IgaW5kaWNhdG9yIGJhc2VkIG9uIGFjdGl2ZSB0YWIuXG4gICAgICogQHBhcmFtIHtjYXNofSBlbFxuICAgICAqL1xuICAgIF9jYWxjUmlnaHRQb3MoZWwpIHtcbiAgICAgIHJldHVybiBNYXRoLmNlaWwodGhpcy50YWJzV2lkdGggLSBlbC5wb3NpdGlvbigpLmxlZnQgLSBlbFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRmluZHMgbGVmdCBhdHRyaWJ1dGUgZm9yIGluZGljYXRvciBiYXNlZCBvbiBhY3RpdmUgdGFiLlxuICAgICAqIEBwYXJhbSB7Y2FzaH0gZWxcbiAgICAgKi9cbiAgICBfY2FsY0xlZnRQb3MoZWwpIHtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKGVsLnBvc2l0aW9uKCkubGVmdCk7XG4gICAgfVxuXG4gICAgdXBkYXRlVGFiSW5kaWNhdG9yKCkge1xuICAgICAgdGhpcy5fYW5pbWF0ZUluZGljYXRvcih0aGlzLmluZGV4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBbmltYXRlcyBJbmRpY2F0b3IgdG8gYWN0aXZlIHRhYi5cbiAgICAgKiBAcGFyYW0ge051bWJlcn0gcHJldkluZGV4XG4gICAgICovXG4gICAgX2FuaW1hdGVJbmRpY2F0b3IocHJldkluZGV4KSB7XG4gICAgICBsZXQgbGVmdERlbGF5ID0gMCxcbiAgICAgICAgICByaWdodERlbGF5ID0gMDtcblxuICAgICAgaWYgKCh0aGlzLmluZGV4IC0gcHJldkluZGV4KSA+PSAwKSB7XG4gICAgICAgIGxlZnREZWxheSA9IDkwO1xuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByaWdodERlbGF5ID0gOTA7XG4gICAgICB9XG5cbiAgICAgIC8vIEFuaW1hdGVcbiAgICAgIGxldCBhbmltT3B0aW9ucyA9IHtcbiAgICAgICAgdGFyZ2V0czogdGhpcy5faW5kaWNhdG9yLFxuICAgICAgICBsZWZ0OiB7XG4gICAgICAgICAgdmFsdWU6IHRoaXMuX2NhbGNMZWZ0UG9zKHRoaXMuJGFjdGl2ZVRhYkxpbmspLFxuICAgICAgICAgIGRlbGF5OiBsZWZ0RGVsYXlcbiAgICAgICAgfSxcbiAgICAgICAgcmlnaHQ6IHtcbiAgICAgICAgICB2YWx1ZTogdGhpcy5fY2FsY1JpZ2h0UG9zKHRoaXMuJGFjdGl2ZVRhYkxpbmspLFxuICAgICAgICAgIGRlbGF5OiByaWdodERlbGF5XG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uOiB0aGlzLm9wdGlvbnMuZHVyYXRpb24sXG4gICAgICAgIGVhc2luZzogJ2Vhc2VPdXRRdWFkJ1xuICAgICAgfTtcbiAgICAgIGFuaW0ucmVtb3ZlKHRoaXMuX2luZGljYXRvcik7XG4gICAgICBhbmltKGFuaW1PcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZWxlY3QgdGFiLlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSB0YWJJZFxuICAgICAqL1xuICAgIHNlbGVjdCh0YWJJZCkge1xuICAgICAgbGV0IHRhYiA9IHRoaXMuJHRhYkxpbmtzLmZpbHRlcignW2hyZWY9XCIjJyArIHRhYklkICsgJ1wiXScpO1xuICAgICAgaWYgKHRhYi5sZW5ndGgpIHtcbiAgICAgICAgdGFiLnRyaWdnZXIoJ2NsaWNrJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cblxuICB3aW5kb3cuTS5UYWJzID0gVGFicztcblxuICBpZiAoTS5qUXVlcnlMb2FkZWQpIHtcbiAgICBNLmluaXRpYWxpemVKcXVlcnlXcmFwcGVyKFRhYnMsICd0YWJzJywgJ01fVGFicycpO1xuICB9XG5cbn0pKGNhc2gsIE0uYW5pbWUpO1xuIl19
