"use strict";var _createClass=function(){function s(t,i){for(var e=0;e<i.length;e++){var s=i[e];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(t,i,e){return i&&s(t.prototype,i),e&&s(t,e),t}}(),_get=function t(i,e,s){null===i&&(i=Function.prototype);var n=Object.getOwnPropertyDescriptor(i,e);if(void 0===n){var o=Object.getPrototypeOf(i);return null===o?void 0:t(o,e,s)}if("value"in n)return n.value;var a=n.get;return void 0!==a?a.call(s):void 0};function _classCallCheck(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,i){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!=typeof i&&"function"!=typeof i?t:i}function _inherits(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+typeof i);t.prototype=Object.create(i&&i.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(t,i):t.__proto__=i)}!function(u){var i={dialRadius:135,outerRadius:105,innerRadius:70,tickRadius:20,duration:350,container:null,defaultTime:"now",fromNow:0,showClearBtn:!1,i18n:{cancel:"Cancel",clear:"Clear",done:"Ok"},autoClose:!1,twelveHour:!0,vibrate:!0},t=function(t){function v(t,i){_classCallCheck(this,v);var e=_possibleConstructorReturn(this,(v.__proto__||Object.getPrototypeOf(v)).call(this,v,t,i));return(e.el.M_Timepicker=e).options=u.extend({},v.defaults,i),e.id=M.guid(),e._insertHTMLIntoDOM(),e._setupModal(),e._setupVariables(),e._setupEventHandlers(),e._clockSetup(),e._pickerSetup(),e}return _inherits(v,Component),_createClass(v,[{key:"destroy",value:function(){this._removeEventHandlers(),this.modal.destroy(),u(this.modalEl).remove(),this.el.M_Timepicker=void 0}},{key:"_setupEventHandlers",value:function(){this._handleInputKeydownBound=this._handleInputKeydown.bind(this),this._handleInputClickBound=this._handleInputClick.bind(this),this._handleClockClickStartBound=this._handleClockClickStart.bind(this),this._handleDocumentClickMoveBound=this._handleDocumentClickMove.bind(this),this._handleDocumentClickEndBound=this._handleDocumentClickEnd.bind(this),this.el.addEventListener("click",this._handleInputClickBound),this.el.addEventListener("keydown",this._handleInputKeydownBound),this.plate.addEventListener("mousedown",this._handleClockClickStartBound),this.plate.addEventListener("touchstart",this._handleClockClickStartBound),u(this.spanHours).on("click",this.showView.bind(this,"hours")),u(this.spanMinutes).on("click",this.showView.bind(this,"minutes"))}},{key:"_removeEventHandlers",value:function(){this.el.removeEventListener("click",this._handleInputClickBound),this.el.removeEventListener("keydown",this._handleInputKeydownBound)}},{key:"_handleInputClick",value:function(){this.open()}},{key:"_handleInputKeydown",value:function(t){t.which===M.keys.ENTER&&(t.preventDefault(),this.open())}},{key:"_handleClockClickStart",value:function(t){t.preventDefault();var i=this.plate.getBoundingClientRect(),e=i.left,s=i.top;this.x0=e+this.options.dialRadius,this.y0=s+this.options.dialRadius,this.moved=!1;var n=v._Pos(t);this.dx=n.x-this.x0,this.dy=n.y-this.y0,this.setHand(this.dx,this.dy,!1),document.addEventListener("mousemove",this._handleDocumentClickMoveBound),document.addEventListener("touchmove",this._handleDocumentClickMoveBound),document.addEventListener("mouseup",this._handleDocumentClickEndBound),document.addEventListener("touchend",this._handleDocumentClickEndBound)}},{key:"_handleDocumentClickMove",value:function(t){t.preventDefault();var i=v._Pos(t),e=i.x-this.x0,s=i.y-this.y0;this.moved=!0,this.setHand(e,s,!1,!0)}},{key:"_handleDocumentClickEnd",value:function(t){var i=this;t.preventDefault(),document.removeEventListener("mouseup",this._handleDocumentClickEndBound),document.removeEventListener("touchend",this._handleDocumentClickEndBound);var e=v._Pos(t),s=e.x-this.x0,n=e.y-this.y0;this.moved&&s===this.dx&&n===this.dy&&this.setHand(s,n),"hours"===this.currentView?this.showView("minutes",this.options.duration/2):this.options.autoClose&&(u(this.minutesView).addClass("timepicker-dial-out"),setTimeout(function(){i.done()},this.options.duration/2)),document.removeEventListener("mousemove",this._handleDocumentClickMoveBound),document.removeEventListener("touchmove",this._handleDocumentClickMoveBound)}},{key:"_insertHTMLIntoDOM",value:function(){this.$modalEl=u(v._template),this.modalEl=this.$modalEl[0],this.modalEl.id="modal-"+this.id;var t=document.querySelector(this.options.container);this.options.container&&t?this.$modalEl.appendTo(t):this.$modalEl.insertBefore(this.el)}},{key:"_setupModal",value:function(){var t=this;this.modal=M.Modal.init(this.modalEl,{onCloseEnd:function(){t.isOpen=!1}})}},{key:"_setupVariables",value:function(){this.currentView="hours",this.vibrate=navigator.vibrate?"vibrate":navigator.webkitVibrate?"webkitVibrate":null,this._canvas=this.modalEl.querySelector(".timepicker-canvas"),this.plate=this.modalEl.querySelector(".timepicker-plate"),this.hoursView=this.modalEl.querySelector(".timepicker-hours"),this.minutesView=this.modalEl.querySelector(".timepicker-minutes"),this.spanHours=this.modalEl.querySelector(".timepicker-span-hours"),this.spanMinutes=this.modalEl.querySelector(".timepicker-span-minutes"),this.spanAmPm=this.modalEl.querySelector(".timepicker-span-am-pm"),this.footer=this.modalEl.querySelector(".timepicker-footer"),this.amOrPm="PM"}},{key:"_pickerSetup",value:function(){var t=u('<button class="btn-flat timepicker-clear waves-effect" style="visibility: hidden;" type="button" tabindex="'+(this.options.twelveHour?"3":"1")+'">'+this.options.i18n.clear+"</button>").appendTo(this.footer).on("click",this.clear.bind(this));this.options.showClearBtn&&t.css({visibility:""});var i=u('<div class="confirmation-btns"></div>');u('<button class="btn-flat timepicker-close waves-effect" type="button" tabindex="'+(this.options.twelveHour?"3":"1")+'">'+this.options.i18n.cancel+"</button>").appendTo(i).on("click",this.close.bind(this)),u('<button class="btn-flat timepicker-close waves-effect" type="button" tabindex="'+(this.options.twelveHour?"3":"1")+'">'+this.options.i18n.done+"</button>").appendTo(i).on("click",this.done.bind(this)),i.appendTo(this.footer)}},{key:"_clockSetup",value:function(){this.options.twelveHour&&(this.$amBtn=u('<div class="am-btn">AM</div>'),this.$pmBtn=u('<div class="pm-btn">PM</div>'),this.$amBtn.on("click",this._handleAmPmClick.bind(this)).appendTo(this.spanAmPm),this.$pmBtn.on("click",this._handleAmPmClick.bind(this)).appendTo(this.spanAmPm)),this._buildHoursView(),this._buildMinutesView(),this._buildSVGClock()}},{key:"_buildSVGClock",value:function(){var t=this.options.dialRadius,i=this.options.tickRadius,e=2*t,s=v._createSVGEl("svg");s.setAttribute("class","timepicker-svg"),s.setAttribute("width",e),s.setAttribute("height",e);var n=v._createSVGEl("g");n.setAttribute("transform","translate("+t+","+t+")");var o=v._createSVGEl("circle");o.setAttribute("class","timepicker-canvas-bearing"),o.setAttribute("cx",0),o.setAttribute("cy",0),o.setAttribute("r",4);var a=v._createSVGEl("line");a.setAttribute("x1",0),a.setAttribute("y1",0);var r=v._createSVGEl("circle");r.setAttribute("class","timepicker-canvas-bg"),r.setAttribute("r",i),n.appendChild(a),n.appendChild(r),n.appendChild(o),s.appendChild(n),this._canvas.appendChild(s),this.hand=a,this.bg=r,this.bearing=o,this.g=n}},{key:"_buildHoursView",value:function(){var t=u('<div class="timepicker-tick"></div>');if(this.options.twelveHour)for(var i=1;i<13;i+=1){var e=t.clone(),s=i/6*Math.PI,n=this.options.outerRadius;e.css({left:this.options.dialRadius+Math.sin(s)*n-this.options.tickRadius+"px",top:this.options.dialRadius-Math.cos(s)*n-this.options.tickRadius+"px"}),e.html(0===i?"00":i),this.hoursView.appendChild(e[0])}else for(var o=0;o<24;o+=1){var a=t.clone(),r=o/6*Math.PI,l=0<o&&o<13?this.options.innerRadius:this.options.outerRadius;a.css({left:this.options.dialRadius+Math.sin(r)*l-this.options.tickRadius+"px",top:this.options.dialRadius-Math.cos(r)*l-this.options.tickRadius+"px"}),a.html(0===o?"00":o),this.hoursView.appendChild(a[0])}}},{key:"_buildMinutesView",value:function(){for(var t=u('<div class="timepicker-tick"></div>'),i=0;i<60;i+=5){var e=t.clone(),s=i/30*Math.PI;e.css({left:this.options.dialRadius+Math.sin(s)*this.options.outerRadius-this.options.tickRadius+"px",top:this.options.dialRadius-Math.cos(s)*this.options.outerRadius-this.options.tickRadius+"px"}),e.html(v._addLeadingZero(i)),this.minutesView.appendChild(e[0])}}},{key:"_handleAmPmClick",value:function(t){var i=u(t.target);this.amOrPm=i.hasClass("am-btn")?"AM":"PM",this._updateAmPmView()}},{key:"_updateAmPmView",value:function(){this.options.twelveHour&&(this.$amBtn.toggleClass("text-primary","AM"===this.amOrPm),this.$pmBtn.toggleClass("text-primary","PM"===this.amOrPm))}},{key:"_updateTimeFromInput",value:function(){var t=((this.el.value||this.options.defaultTime||"")+"").split(":");if(this.options.twelveHour&&void 0!==t[1]&&(0<t[1].toUpperCase().indexOf("AM")?this.amOrPm="AM":this.amOrPm="PM",t[1]=t[1].replace("AM","").replace("PM","")),"now"===t[0]){var i=new Date(+new Date+this.options.fromNow);t=[i.getHours(),i.getMinutes()],this.options.twelveHour&&(this.amOrPm=12<=t[0]&&t[0]<24?"PM":"AM")}this.hours=+t[0]||0,this.minutes=+t[1]||0,this.spanHours.innerHTML=this.hours,this.spanMinutes.innerHTML=v._addLeadingZero(this.minutes),this._updateAmPmView()}},{key:"showView",value:function(t,i){"minutes"===t&&u(this.hoursView).css("visibility");var e="hours"===t,s=e?this.hoursView:this.minutesView,n=e?this.minutesView:this.hoursView;this.currentView=t,u(this.spanHours).toggleClass("text-primary",e),u(this.spanMinutes).toggleClass("text-primary",!e),n.classList.add("timepicker-dial-out"),u(s).css("visibility","visible").removeClass("timepicker-dial-out"),this.resetClock(i),clearTimeout(this.toggleViewTimer),this.toggleViewTimer=setTimeout(function(){u(n).css("visibility","hidden")},this.options.duration)}},{key:"resetClock",value:function(t){var i=this.currentView,e=this[i],s="hours"===i,n=e*(Math.PI/(s?6:30)),o=s&&0<e&&e<13?this.options.innerRadius:this.options.outerRadius,a=Math.sin(n)*o,r=-Math.cos(n)*o,l=this;t?(u(this.canvas).addClass("timepicker-canvas-out"),setTimeout(function(){u(l.canvas).removeClass("timepicker-canvas-out"),l.setHand(a,r)},t)):this.setHand(a,r)}},{key:"setHand",value:function(t,i,e){var s=this,n=Math.atan2(t,-i),o="hours"===this.currentView,a=Math.PI/(o||e?6:30),r=Math.sqrt(t*t+i*i),l=o&&r<(this.options.outerRadius+this.options.innerRadius)/2,u=l?this.options.innerRadius:this.options.outerRadius;this.options.twelveHour&&(u=this.options.outerRadius),n<0&&(n=2*Math.PI+n);var h=Math.round(n/a);n=h*a,this.options.twelveHour?o?0===h&&(h=12):(e&&(h*=5),60===h&&(h=0)):o?(12===h&&(h=0),h=l?0===h?12:h:0===h?0:h+12):(e&&(h*=5),60===h&&(h=0)),this[this.currentView]!==h&&this.vibrate&&this.options.vibrate&&(this.vibrateTimer||(navigator[this.vibrate](10),this.vibrateTimer=setTimeout(function(){s.vibrateTimer=null},100))),this[this.currentView]=h,o?this.spanHours.innerHTML=h:this.spanMinutes.innerHTML=v._addLeadingZero(h);var c=Math.sin(n)*(u-this.options.tickRadius),d=-Math.cos(n)*(u-this.options.tickRadius),p=Math.sin(n)*u,m=-Math.cos(n)*u;this.hand.setAttribute("x2",c),this.hand.setAttribute("y2",d),this.bg.setAttribute("cx",p),this.bg.setAttribute("cy",m)}},{key:"open",value:function(){this.isOpen||(this.isOpen=!0,this._updateTimeFromInput(),this.showView("hours"),this.modal.open())}},{key:"close",value:function(){this.isOpen&&(this.isOpen=!1,this.modal.close())}},{key:"done",value:function(t,i){var e=this.el.value,s=i?"":v._addLeadingZero(this.hours)+":"+v._addLeadingZero(this.minutes);this.time=s,!i&&this.options.twelveHour&&(s=s+" "+this.amOrPm),(this.el.value=s)!==e&&this.$el.trigger("change"),this.close(),this.el.focus()}},{key:"clear",value:function(){this.done(null,!0)}}],[{key:"init",value:function(t,i){return _get(v.__proto__||Object.getPrototypeOf(v),"init",this).call(this,this,t,i)}},{key:"_addLeadingZero",value:function(t){return(t<10?"0":"")+t}},{key:"_createSVGEl",value:function(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}},{key:"_Pos",value:function(t){return t.targetTouches&&1<=t.targetTouches.length?{x:t.targetTouches[0].clientX,y:t.targetTouches[0].clientY}:{x:t.clientX,y:t.clientY}}},{key:"getInstance",value:function(t){return(t.jquery?t[0]:t).M_Timepicker}},{key:"defaults",get:function(){return i}}]),v}();t._template=['<div class= "modal timepicker-modal">','<div class="modal-content timepicker-container">','<div class="timepicker-digital-display">','<div class="timepicker-text-container">','<div class="timepicker-display-column">','<span class="timepicker-span-hours text-primary"></span>',":",'<span class="timepicker-span-minutes"></span>',"</div>",'<div class="timepicker-display-column timepicker-display-am-pm">','<div class="timepicker-span-am-pm"></div>',"</div>","</div>","</div>",'<div class="timepicker-analog-display">','<div class="timepicker-plate">','<div class="timepicker-canvas"></div>','<div class="timepicker-dial timepicker-hours"></div>','<div class="timepicker-dial timepicker-minutes timepicker-dial-out"></div>',"</div>",'<div class="timepicker-footer"></div>',"</div>","</div>","</div>"].join(""),M.Timepicker=t,M.jQueryLoaded&&M.initializeJqueryWrapper(t,"timepicker","M_Timepicker")}(cash);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
