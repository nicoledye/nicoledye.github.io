"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_createClass=function(){function s(t,e){for(var n=0;n<e.length;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(t,e,n){return e&&s(t.prototype,e),n&&s(t,n),t}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}!function(n,s){var t={html:"",displayLength:4e3,inDuration:300,outDuration:375,classes:"",completeCallback:null,activationPercent:.8},e=function(){function a(t){_classCallCheck(this,a),this.options=n.extend({},a.defaults,t),this.message=this.options.html,this.panning=!1,this.timeRemaining=this.options.displayLength,0===a._toasts.length&&a._createContainer(),a._toasts.push(this);var e=this._createToast();(e.M_Toast=this).el=e,this._animateIn(),this._setTimer()}return _createClass(a,[{key:"_createToast",value:function(){var t=document.createElement("div");return t.classList.add("toast"),this.options.classes.length&&n(t).addClass(this.options.classes),("object"===("undefined"==typeof HTMLElement?"undefined":_typeof(HTMLElement))?this.message instanceof HTMLElement:this.message&&"object"===_typeof(this.message)&&null!==this.message&&1===this.message.nodeType&&"string"==typeof this.message.nodeName)?t.appendChild(this.message):this.message.jquery?n(t).append(this.message[0]):t.innerHTML=this.message,a._container.appendChild(t),t}},{key:"_animateIn",value:function(){s({targets:this.el,top:0,opacity:1,duration:300,easing:"easeOutCubic"})}},{key:"_setTimer",value:function(){var t=this;this.timeRemaining!==1/0&&(this.counterInterval=setInterval(function(){t.panning||(t.timeRemaining-=20),t.timeRemaining<=0&&t.dismiss()},20))}},{key:"dismiss",value:function(){var t=this;window.clearInterval(this.counterInterval);var e=this.el.offsetWidth*this.options.activationPercent;this.wasSwiped&&(this.el.style.transition="transform .05s, opacity .05s",this.el.style.transform="translateX("+e+"px)",this.el.style.opacity=0),s({targets:this.el,opacity:0,marginTop:-40,duration:this.options.outDuration,easing:"easeOutExpo",complete:function(){"function"==typeof t.options.completeCallback&&t.options.completeCallback(),t.el.parentNode.removeChild(t.el),a._toasts.splice(a._toasts.indexOf(t),1),0===a._toasts.length&&a._removeContainer()}})}}],[{key:"getInstance",value:function(t){return(t.jquery?t[0]:t).M_Toast}},{key:"_createContainer",value:function(){var t=document.createElement("div");t.setAttribute("id","toast-container"),t.addEventListener("touchstart",a._onDragStart),t.addEventListener("touchmove",a._onDragMove),t.addEventListener("touchend",a._onDragEnd),t.addEventListener("mousedown",a._onDragStart),document.addEventListener("mousemove",a._onDragMove),document.addEventListener("mouseup",a._onDragEnd),document.body.appendChild(t),a._container=t}},{key:"_removeContainer",value:function(){document.removeEventListener("mousemove",a._onDragMove),document.removeEventListener("mouseup",a._onDragEnd),a._container.parentNode.removeChild(a._container),a._container=null}},{key:"_onDragStart",value:function(t){if(t.target&&n(t.target).closest(".toast").length){var e=n(t.target).closest(".toast")[0].M_Toast;e.panning=!0,(a._draggedToast=e).el.classList.add("panning"),e.el.style.transition="",e.startingXPos=a._xPos(t),e.time=Date.now(),e.xPos=a._xPos(t)}}},{key:"_onDragMove",value:function(t){if(a._draggedToast){t.preventDefault();var e=a._draggedToast;e.deltaX=Math.abs(e.xPos-a._xPos(t)),e.xPos=a._xPos(t),e.velocityX=e.deltaX/(Date.now()-e.time),e.time=Date.now();var n=e.xPos-e.startingXPos,s=e.el.offsetWidth*e.options.activationPercent;e.el.style.transform="translateX("+n+"px)",e.el.style.opacity=1-Math.abs(n/s)}}},{key:"_onDragEnd",value:function(){if(a._draggedToast){var t=a._draggedToast;t.panning=!1,t.el.classList.remove("panning");var e=t.xPos-t.startingXPos,n=t.el.offsetWidth*t.options.activationPercent;Math.abs(e)>n||1<t.velocityX?(t.wasSwiped=!0,t.dismiss()):(t.el.style.transition="transform .2s, opacity .2s",t.el.style.transform="",t.el.style.opacity=""),a._draggedToast=null}}},{key:"_xPos",value:function(t){return t.targetTouches&&1<=t.targetTouches.length?t.targetTouches[0].clientX:t.clientX}},{key:"dismissAll",value:function(){for(var t in a._toasts)a._toasts[t].dismiss()}},{key:"defaults",get:function(){return t}}]),a}();e._toasts=[],e._container=null,e._draggedToast=null,M.Toast=e,M.toast=function(t){return new e(t)}}(cash,M.anime);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvYXN0cy5qcyJdLCJuYW1lcyI6WyIkIiwiYW5pbSIsIl9kZWZhdWx0cyIsImh0bWwiLCJkaXNwbGF5TGVuZ3RoIiwiaW5EdXJhdGlvbiIsIm91dER1cmF0aW9uIiwiY2xhc3NlcyIsImNvbXBsZXRlQ2FsbGJhY2siLCJhY3RpdmF0aW9uUGVyY2VudCIsIm9wdGlvbnMiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiVG9hc3QiLCJleHRlbmQiLCJkZWZhdWx0cyIsIm1lc3NhZ2UiLCJwYW5uaW5nIiwidGltZVJlbWFpbmluZyIsIl90b2FzdHMiLCJsZW5ndGgiLCJfY3JlYXRlQ29udGFpbmVyIiwicHVzaCIsInRvYXN0RWxlbWVudCIsIl9jcmVhdGVUb2FzdCIsImVsIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJ0b2FzdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImNvbnRhaW5lciIsInNldEF0dHJpYnV0ZSIsImFkZENsYXNzIiwiYWRkRXZlbnRMaXN0ZW5lciIsIkhUTUxFbGVtZW50IiwiX29uRHJhZ01vdmUiLCJhcHBlbmRDaGlsZCIsImpxdWVyeSIsImFwcGVuZCIsImlubmVySFRNTCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YXJnZXRzIiwidG9wIiwib3BhY2l0eSIsImR1cmF0aW9uIiwiZWFzaW5nIiwidGltZSIsIl94UG9zIiwiY291bnRlckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJfdGhpcyIsImRpc21pc3MiLCJfdGhpczIiLCJ3aW5kb3ciLCJjbGVhckludGVydmFsIiwidG90YWxEZWx0YVgiLCJhY3RpdmF0aW9uRGlzdGFuY2UiLCJvZmZzZXRXaWR0aCIsInRyYW5zZm9ybSIsIndhc1N3aXBlZCIsInN0eWxlIiwidHJhbnNpdGlvbiIsIm1hcmdpblRvcCIsIl9kcmFnZ2VkVG9hc3QiLCJzdGFydGluZ1hQb3MiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJzaG91bGRCZURpc21pc3NlZCIsImluZGV4T2YiLCJNX1RvYXN0IiwiX29uRHJhZ1N0YXJ0IiwiX29uRHJhZ0VuZCIsImJvZHkiLCJfY29udGFpbmVyIiwiZSIsInRhcmdldCIsImNsb3Nlc3QiLCJEYXRlIiwibm93IiwieFBvcyIsInByZXZlbnREZWZhdWx0IiwiZGVsdGFYIiwiSW5maW5pdHkiLCJ2ZWxvY2l0eVgiLCJNYXRoIiwiYWJzIiwicmVtb3ZlIiwiY29tcGxldGUiLCJfcmVtb3ZlQ29udGFpbmVyIiwidGFyZ2V0VG91Y2hlcyIsImNsaWVudFgiLCJ0b2FzdEluZGV4IiwiZ2V0IiwiTSIsImNhc2giLCJhbmltZSJdLCJtYXBwaW5ncyI6ImdsQkFBQSxTQUFVQSxFQUFHQyxHQUdYLElBQUlDLEVBQVksQ0FDZEMsS0FBTSxHQUNOQyxjQUFlLElBQ2ZDLFdBQVksSUFDWkMsWUFBYSxJQVBoQkMsUUFBQSxHQUNDQyxpQkFBQSxLQVNFQyxrQkFBbUIsSUFMbkJMLEVBTGUsV0FNZkMsU0FBQUEsRUFBWUssR0FIRUMsZ0JBQUFDLEtBQUFDLEdBaUJaRCxLQUFLRixRQUFVVixFQUFFYyxPQUFPLEdBQUlELEVBQU1FLFNBQVVMLEdBUDFDRyxLQWJXRyxRQUFBSixLQUFBRixRQUFBUCxLQTJCYlMsS0FBS0ssU0FBVSxFQUpmTCxLQUFBTSxjQUFBTixLQUFBRixRQUFBTixjQVc2QixJQUF6QlMsRUFBTU0sUUFBUUMsUUFDaEJQLEVBQU1RLG1CQUlSUixFQUFNTSxRQUFRRyxLQUFLVixNQUNuQixJQUFJVyxFQUFlWCxLQUFLWSxnQkFSeEJELEVBQUtMLFFBQWdCTixNQVVoQmEsR0FBS0YsRUFSVlgsS0FBSUMsYUFDRkEsS0FBQUEsWUFuQ1csT0FBQWEsYUFBQWIsRUFBQSxDQUFBLENBQUFjLElBQUEsZUFBQUMsTUFBQSxXQUFBLElBQUFDLEVBQUFDLFNBQUFDLGNBQUEsT0FxRmJELE9BckZhRCxFQUFBRyxVQUFBQyxJQUFBLFNBZ0ViQyxLQUFBQSxRQUFVQyxRQUFhZixRQStIckJwQixFQUFFNkIsR0FBT08sU0FBU3hCLEtB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TCxJQUFBL0IsRUFBQTlCLEVBQUFzRCxLQUFBdEQsRUFBQXVDLGFBcEhGUixFQXFITkgsRUFBT0MsR0FBQUEsWUFBbUJOLEVBQUFBLFFBQTFCM0Msa0JBQ0ltRCxLQUNBNkIsSUFBUTVCLEdBQWNELEdBcEhGLEVBQWxCL0IsRUFBTTBELFdBeUhWMUQsRUFBS0osV0FBU3NCLEVBQ2ZsQixFQUFBMEIsWUFLQ1IsRUFBQUEsR0FBU2lCLE1BRk5DLFdBQUEsNkJBR0hDLEVBQUFBLEdBQUFBLE1BSEdKLFVBQUEsR0FJSGQsRUFBQUEsR0FBQUEsTUFBZXRDLFFBQVFKLElBRXZCcUYsRUFBQUEsY0FBVSxRQWxSQyxDQUFBaEUsSUFBQSxRQUFBQyxNQUFBLFNBMFJMZixHQUNGQSxPQUFBQSxFQUFBQSxlQUFBLEdBQU0rRSxFQUFBQSxjQUFOeEUsT0FDRDBELEVBQUFlLGNBQUEsR0FBQUMsUUFHTmhCLEVBQUFnQixVQS9SYyxDQUFBbkUsSUFBQSxhQUFBQyxNQUFBLFdBZ0xiLElBQUksSUFBSW1FLEtBQWNsRixFQUFNTSxRQWhMZk4sRUFBQU0sUUFBQTRFLEdBc0RJdEUsWUF0REosQ0FBQUUsSUFBQSxXQUFBcUUsSUFBQSxXQXVDYm5GLE9BQU1NLE1BdkNPTixFQUFBLEdBZ0tmQSxFQUFBTSxRQUFBLEdBaEtlTixFQUFBZ0UsV0FBQSxLQTBLZGhFLEVBQUFzRCxjQUFBLEtBRUQ4QixFQUFBcEYsTUFBQUEsRUEySUZvRixFQUFFcEUsTUFBUSxTQUFTbkIsR0FDakIsT0FBTyxJQUFJRyxFQUFNSCxJQXhUckIsQ0FBbUJ3RixLQUFBRCxFQUFBRSIsImZpbGUiOiJ0b2FzdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oJCwgYW5pbSkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgbGV0IF9kZWZhdWx0cyA9IHtcbiAgICBodG1sOiAnJyxcbiAgICBkaXNwbGF5TGVuZ3RoOiA0MDAwLFxuICAgIGluRHVyYXRpb246IDMwMCxcbiAgICBvdXREdXJhdGlvbjogMzc1LFxuICAgIGNsYXNzZXM6ICcnLFxuICAgIGNvbXBsZXRlQ2FsbGJhY2s6IG51bGwsXG4gICAgYWN0aXZhdGlvblBlcmNlbnQ6IDAuOFxuICB9O1xuXG4gIGNsYXNzIFRvYXN0IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG5cbiAgICAgIC8qKlxuICAgICAgICogT3B0aW9ucyBmb3IgdGhlIHRvYXN0XG4gICAgICAgKiBAbWVtYmVyIFRvYXN0I29wdGlvbnNcbiAgICAgICAqL1xuICAgICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIFRvYXN0LmRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICAgIHRoaXMubWVzc2FnZSA9IHRoaXMub3B0aW9ucy5odG1sO1xuXG4gICAgICAvKipcbiAgICAgICAqIERlc2NyaWJlcyBjdXJyZW50IHBhbiBzdGF0ZSB0b2FzdFxuICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgKi9cbiAgICAgIHRoaXMucGFubmluZyA9IGZhbHNlO1xuXG4gICAgICAvKipcbiAgICAgICAqIFRpbWUgcmVtYWluaW5nIHVudGlsIHRvYXN0IGlzIHJlbW92ZWRcbiAgICAgICAqL1xuICAgICAgdGhpcy50aW1lUmVtYWluaW5nID0gdGhpcy5vcHRpb25zLmRpc3BsYXlMZW5ndGg7XG5cbiAgICAgIGlmIChUb2FzdC5fdG9hc3RzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBUb2FzdC5fY3JlYXRlQ29udGFpbmVyKCk7XG4gICAgICB9XG5cbiAgICAgIC8vIENyZWF0ZSBuZXcgdG9hc3RcbiAgICAgIFRvYXN0Ll90b2FzdHMucHVzaCh0aGlzKTtcbiAgICAgIGxldCB0b2FzdEVsZW1lbnQgPSB0aGlzLl9jcmVhdGVUb2FzdCgpO1xuICAgICAgdG9hc3RFbGVtZW50Lk1fVG9hc3QgPSB0aGlzO1xuICAgICAgdGhpcy5lbCA9IHRvYXN0RWxlbWVudDtcbiAgICAgIHRoaXMuX2FuaW1hdGVJbigpO1xuICAgICAgdGhpcy5fc2V0VGltZXIoKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IGRlZmF1bHRzKCkge1xuICAgICAgcmV0dXJuIF9kZWZhdWx0cztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgSW5zdGFuY2VcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoZWwpIHtcbiAgICAgIGxldCBkb21FbGVtID0gISFlbC5qcXVlcnkgPyBlbFswXSA6IGVsO1xuICAgICAgcmV0dXJuIGRvbUVsZW0uTV9Ub2FzdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBcHBlbmQgdG9hc3QgY29udGFpbmVyIGFuZCBhZGQgZXZlbnQgaGFuZGxlcnNcbiAgICAgKi9cbiAgICBzdGF0aWMgX2NyZWF0ZUNvbnRhaW5lcigpIHtcbiAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvYXN0LWNvbnRhaW5lcicpO1xuXG4gICAgICAvLyBBZGQgZXZlbnQgaGFuZGxlclxuICAgICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBUb2FzdC5fb25EcmFnU3RhcnQpO1xuICAgICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIFRvYXN0Ll9vbkRyYWdNb3ZlKTtcbiAgICAgIGNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIFRvYXN0Ll9vbkRyYWdFbmQpO1xuXG4gICAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgVG9hc3QuX29uRHJhZ1N0YXJ0KTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIFRvYXN0Ll9vbkRyYWdNb3ZlKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBUb2FzdC5fb25EcmFnRW5kKTtcblxuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgICAgVG9hc3QuX2NvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdG9hc3QgY29udGFpbmVyIGFuZCBldmVudCBoYW5kbGVyc1xuICAgICAqL1xuICAgIHN0YXRpYyBfcmVtb3ZlQ29udGFpbmVyKCkge1xuICAgICAgLy8gQWRkIGV2ZW50IGhhbmRsZXJcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIFRvYXN0Ll9vbkRyYWdNb3ZlKTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBUb2FzdC5fb25EcmFnRW5kKTtcblxuICAgICAgVG9hc3QuX2NvbnRhaW5lci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKFRvYXN0Ll9jb250YWluZXIpO1xuICAgICAgVG9hc3QuX2NvbnRhaW5lciA9IG51bGw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQmVnaW4gZHJhZyBoYW5kbGVyXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqL1xuICAgIHN0YXRpYyBfb25EcmFnU3RhcnQoZSkge1xuICAgICAgaWYgKGUudGFyZ2V0ICYmICQoZS50YXJnZXQpLmNsb3Nlc3QoJy50b2FzdCcpLmxlbmd0aCkge1xuICAgICAgICBsZXQgJHRvYXN0ID0gJChlLnRhcmdldCkuY2xvc2VzdCgnLnRvYXN0Jyk7XG4gICAgICAgIGxldCB0b2FzdCA9ICR0b2FzdFswXS5NX1RvYXN0O1xuICAgICAgICB0b2FzdC5wYW5uaW5nID0gdHJ1ZTtcbiAgICAgICAgVG9hc3QuX2RyYWdnZWRUb2FzdCA9IHRvYXN0O1xuICAgICAgICB0b2FzdC5lbC5jbGFzc0xpc3QuYWRkKCdwYW5uaW5nJyk7XG4gICAgICAgIHRvYXN0LmVsLnN0eWxlLnRyYW5zaXRpb24gPSAnJztcbiAgICAgICAgdG9hc3Quc3RhcnRpbmdYUG9zID0gVG9hc3QuX3hQb3MoZSk7XG4gICAgICAgIHRvYXN0LnRpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgICB0b2FzdC54UG9zID0gVG9hc3QuX3hQb3MoZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRHJhZyBtb3ZlIGhhbmRsZXJcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICovXG4gICAgc3RhdGljIF9vbkRyYWdNb3ZlKGUpIHtcbiAgICAgIGlmICghIVRvYXN0Ll9kcmFnZ2VkVG9hc3QpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgdG9hc3QgPSBUb2FzdC5fZHJhZ2dlZFRvYXN0O1xuICAgICAgICB0b2FzdC5kZWx0YVggPSBNYXRoLmFicyh0b2FzdC54UG9zIC0gVG9hc3QuX3hQb3MoZSkpO1xuICAgICAgICB0b2FzdC54UG9zID0gVG9hc3QuX3hQb3MoZSk7XG4gICAgICAgIHRvYXN0LnZlbG9jaXR5WCA9IHRvYXN0LmRlbHRhWCAvIChEYXRlLm5vdygpIC0gdG9hc3QudGltZSk7XG4gICAgICAgIHRvYXN0LnRpbWUgPSBEYXRlLm5vdygpO1xuXG4gICAgICAgIGxldCB0b3RhbERlbHRhWCA9IHRvYXN0LnhQb3MgLSB0b2FzdC5zdGFydGluZ1hQb3M7XG4gICAgICAgIGxldCBhY3RpdmF0aW9uRGlzdGFuY2UgPVxuICAgICAgICAgICAgdG9hc3QuZWwub2Zmc2V0V2lkdGggKiB0b2FzdC5vcHRpb25zLmFjdGl2YXRpb25QZXJjZW50O1xuICAgICAgICB0b2FzdC5lbC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgke3RvdGFsRGVsdGFYfXB4KWA7XG4gICAgICAgIHRvYXN0LmVsLnN0eWxlLm9wYWNpdHkgPSAxLU1hdGguYWJzKHRvdGFsRGVsdGFYIC8gYWN0aXZhdGlvbkRpc3RhbmNlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFbmQgZHJhZyBoYW5kbGVyXG4gICAgICovXG4gICAgc3RhdGljIF9vbkRyYWdFbmQoKSB7XG4gICAgICBpZiAoISFUb2FzdC5fZHJhZ2dlZFRvYXN0KSB7XG4gICAgICAgIGxldCB0b2FzdCA9IFRvYXN0Ll9kcmFnZ2VkVG9hc3Q7XG4gICAgICAgIHRvYXN0LnBhbm5pbmcgPSBmYWxzZTtcbiAgICAgICAgdG9hc3QuZWwuY2xhc3NMaXN0LnJlbW92ZSgncGFubmluZycpO1xuXG4gICAgICAgIGxldCB0b3RhbERlbHRhWCA9IHRvYXN0LnhQb3MgLSB0b2FzdC5zdGFydGluZ1hQb3M7XG4gICAgICAgIGxldCBhY3RpdmF0aW9uRGlzdGFuY2UgPVxuICAgICAgICAgICAgdG9hc3QuZWwub2Zmc2V0V2lkdGggKiB0b2FzdC5vcHRpb25zLmFjdGl2YXRpb25QZXJjZW50O1xuICAgICAgICBsZXQgc2hvdWxkQmVEaXNtaXNzZWQgPSBNYXRoLmFicyh0b3RhbERlbHRhWCkgPiBhY3RpdmF0aW9uRGlzdGFuY2UgfHxcbiAgICAgICAgICAgIHRvYXN0LnZlbG9jaXR5WCA+IDE7XG5cbiAgICAgICAgLy8gUmVtb3ZlIHRvYXN0XG4gICAgICAgIGlmIChzaG91bGRCZURpc21pc3NlZCkge1xuICAgICAgICAgIHRvYXN0Lndhc1N3aXBlZCA9IHRydWU7XG4gICAgICAgICAgdG9hc3QuZGlzbWlzcygpO1xuXG4gICAgICAgIC8vIEFuaW1hdGUgdG9hc3QgYmFjayB0byBvcmlnaW5hbCBwb3NpdGlvblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRvYXN0LmVsLnN0eWxlLnRyYW5zaXRpb24gPSAndHJhbnNmb3JtIC4ycywgb3BhY2l0eSAuMnMnO1xuICAgICAgICAgIHRvYXN0LmVsLnN0eWxlLnRyYW5zZm9ybSA9ICcnO1xuICAgICAgICAgIHRvYXN0LmVsLnN0eWxlLm9wYWNpdHkgPSAnJztcbiAgICAgICAgfVxuICAgICAgICBUb2FzdC5fZHJhZ2dlZFRvYXN0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgeCBwb3NpdGlvbiBvZiBtb3VzZSBvciB0b3VjaCBldmVudFxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKi9cbiAgICBzdGF0aWMgX3hQb3MoZSkge1xuICAgICAgaWYgKGUudGFyZ2V0VG91Y2hlcyAmJiAoZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA+PSAxKSkge1xuICAgICAgICByZXR1cm4gZS50YXJnZXRUb3VjaGVzWzBdLmNsaWVudFg7XG4gICAgICB9XG4gICAgICAvLyBtb3VzZSBldmVudFxuICAgICAgcmV0dXJuIGUuY2xpZW50WDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYWxsIHRvYXN0c1xuICAgICAqL1xuICAgIHN0YXRpYyBkaXNtaXNzQWxsKCkge1xuICAgICAgZm9yKGxldCB0b2FzdEluZGV4IGluIFRvYXN0Ll90b2FzdHMpIHtcbiAgICAgICAgVG9hc3QuX3RvYXN0c1t0b2FzdEluZGV4XS5kaXNtaXNzKCk7XG4gICAgICB9XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgdG9hc3QgYW5kIGFwcGVuZCBpdCB0byB0b2FzdCBjb250YWluZXJcbiAgICAgKi9cbiAgICBfY3JlYXRlVG9hc3QoKSB7XG4gICAgICBsZXQgdG9hc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRvYXN0LmNsYXNzTGlzdC5hZGQoJ3RvYXN0Jyk7XG5cbiAgICAgIC8vIEFkZCBjdXN0b20gY2xhc3NlcyBvbnRvIHRvYXN0XG4gICAgICBpZiAoISF0aGlzLm9wdGlvbnMuY2xhc3Nlcy5sZW5ndGgpIHtcbiAgICAgICAgJCh0b2FzdCkuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmNsYXNzZXMpO1xuICAgICAgfVxuXG4gICAgICAvLyBTZXQgY29udGVudFxuICAgICAgaWYgKCB0eXBlb2YgSFRNTEVsZW1lbnQgPT09ICdvYmplY3QnID9cbiAgICAgICAgICAgdGhpcy5tZXNzYWdlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgOlxuICAgICAgICAgICB0aGlzLm1lc3NhZ2UgJiYgdHlwZW9mIHRoaXMubWVzc2FnZSA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgICAgdGhpcy5tZXNzYWdlICE9PSBudWxsICYmIHRoaXMubWVzc2FnZS5ub2RlVHlwZSA9PT0gMSAmJlxuICAgICAgICAgICB0eXBlb2YgdGhpcy5tZXNzYWdlLm5vZGVOYW1lPT09J3N0cmluZydcbiAgICAgICAgICkge1xuICAgICAgICB0b2FzdC5hcHBlbmRDaGlsZCh0aGlzLm1lc3NhZ2UpO1xuXG4gICAgICAvLyBDaGVjayBpZiBpdCBpcyBqUXVlcnkgb2JqZWN0XG4gICAgICB9IGVsc2UgaWYgKCEhdGhpcy5tZXNzYWdlLmpxdWVyeSkge1xuICAgICAgICAkKHRvYXN0KS5hcHBlbmQodGhpcy5tZXNzYWdlWzBdKTtcblxuICAgICAgLy8gSW5zZXJ0IGFzIGh0bWw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0b2FzdC5pbm5lckhUTUwgPSB0aGlzLm1lc3NhZ2U7XG4gICAgICB9XG5cbiAgICAgIC8vIEFwcGVuZCB0b2FzZnRcbiAgICAgIFRvYXN0Ll9jb250YWluZXIuYXBwZW5kQ2hpbGQodG9hc3QpO1xuICAgICAgcmV0dXJuIHRvYXN0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFuaW1hdGUgaW4gdG9hc3RcbiAgICAgKi9cbiAgICBfYW5pbWF0ZUluKCkge1xuICAgICAgLy8gQW5pbWF0ZSB0b2FzdCBpblxuICAgICAgYW5pbSh7XG4gICAgICAgIHRhcmdldHM6IHRoaXMuZWwsXG4gICAgICAgIHRvcDogMCxcbiAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgICAgZWFzaW5nOiAnZWFzZU91dEN1YmljJ1xuICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgc2V0SW50ZXJ2YWwgd2hpY2ggYXV0b21hdGljYWxseSByZW1vdmVzIHRvYXN0IHdoZW4gdGltZVJlbWFpbmluZyA+PSAwXG4gICAgICogaGFzIGJlZW4gcmVhY2hlZFxuICAgICAqL1xuICAgIF9zZXRUaW1lcigpIHtcbiAgICAgIGlmICh0aGlzLnRpbWVSZW1haW5pbmcgIT09IEluZmluaXR5KSAge1xuICAgICAgICB0aGlzLmNvdW50ZXJJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAvLyBJZiB0b2FzdCBpcyBub3QgYmVpbmcgZHJhZ2dlZCwgZGVjcmVhc2UgaXRzIHRpbWUgcmVtYWluaW5nXG4gICAgICAgICAgaWYgKCF0aGlzLnBhbm5pbmcpIHtcbiAgICAgICAgICAgIHRoaXMudGltZVJlbWFpbmluZyAtPSAyMDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBBbmltYXRlIHRvYXN0IG91dFxuICAgICAgICAgIGlmICh0aGlzLnRpbWVSZW1haW5pbmcgPD0gMCkge1xuICAgICAgICAgICAgdGhpcy5kaXNtaXNzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAyMCk7XG4gICAgICB9XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBEaXNtaXNzIHRvYXN0IHdpdGggYW5pbWF0aW9uXG4gICAgICovXG4gICAgZGlzbWlzcygpIHtcbiAgICAgIHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuY291bnRlckludGVydmFsKTtcbiAgICAgIGxldCBhY3RpdmF0aW9uRGlzdGFuY2UgPVxuICAgICAgICAgIHRoaXMuZWwub2Zmc2V0V2lkdGggKiB0aGlzLm9wdGlvbnMuYWN0aXZhdGlvblBlcmNlbnQ7XG5cbiAgICAgIGlmKHRoaXMud2FzU3dpcGVkKSB7XG4gICAgICAgIHRoaXMuZWwuc3R5bGUudHJhbnNpdGlvbiA9ICd0cmFuc2Zvcm0gLjA1cywgb3BhY2l0eSAuMDVzJztcbiAgICAgICAgdGhpcy5lbC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgke2FjdGl2YXRpb25EaXN0YW5jZX1weClgO1xuICAgICAgICB0aGlzLmVsLnN0eWxlLm9wYWNpdHkgPSAwO1xuICAgICAgfVxuXG5cbiAgICAgIGFuaW0oe1xuICAgICAgICB0YXJnZXRzOiB0aGlzLmVsLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBtYXJnaW5Ub3A6IC00MCxcbiAgICAgICAgZHVyYXRpb246IHRoaXMub3B0aW9ucy5vdXREdXJhdGlvbixcbiAgICAgICAgZWFzaW5nOiAnZWFzZU91dEV4cG8nLFxuICAgICAgICBjb21wbGV0ZTogKCkgPT4ge1xuICAgICAgICAgIC8vIENhbGwgdGhlIG9wdGlvbmFsIGNhbGxiYWNrXG4gICAgICAgICAgaWYodHlwZW9mKHRoaXMub3B0aW9ucy5jb21wbGV0ZUNhbGxiYWNrKSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zLmNvbXBsZXRlQ2FsbGJhY2soKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gUmVtb3ZlIHRvYXN0IGZyb20gRE9NXG4gICAgICAgICAgdGhpcy5lbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZWwpO1xuICAgICAgICAgIFRvYXN0Ll90b2FzdHMuc3BsaWNlKFRvYXN0Ll90b2FzdHMuaW5kZXhPZih0aGlzKSwgMSk7XG4gICAgICAgICAgaWYgKFRvYXN0Ll90b2FzdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBUb2FzdC5fcmVtb3ZlQ29udGFpbmVyKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyb2YgVG9hc3RcbiAgICogQHR5cGUge0FycmF5LjxUb2FzdD59XG4gICAqL1xuICBUb2FzdC5fdG9hc3RzID0gW107XG5cbiAgLyoqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlcm9mIFRvYXN0XG4gICAqL1xuICBUb2FzdC5fY29udGFpbmVyID0gbnVsbDtcblxuICAvKipcbiAgICogQHN0YXRpY1xuICAgKiBAbWVtYmVyb2YgVG9hc3RcbiAgICogQHR5cGUge1RvYXN0fVxuICAgKi9cbiAgVG9hc3QuX2RyYWdnZWRUb2FzdCA9IG51bGw7XG5cbiAgTS5Ub2FzdCA9IFRvYXN0O1xuICBNLnRvYXN0ID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgVG9hc3Qob3B0aW9ucyk7XG4gIH07XG59KShjYXNoLCBNLmFuaW1lKTtcbiJdfQ==
